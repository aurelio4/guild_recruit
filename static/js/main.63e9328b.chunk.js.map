{"version":3,"sources":["components/Fire.js","components/GuildMasterModal.js","components/GuildCard.js","components/ProfileModal.js","components/AddGuildModal.js","components/ManageGuildModal.js","components/DeleteGuildModal.js","components/DeleteProfileModal.js","components/LoggedIn.js","components/RegisterModal.js","components/LoginModal.js","components/LoggedOut.js","components/Directory.js","components/App.js","serviceWorker.js","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","database","GuildMasterModal","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","sendData","bind","assertThisInitialized","state","callback","react_default","a","createElement","Modal","isOpen","isShow","toggle","ModalBody","Form","FormGroup","Label","style","color","for","Input","type","name","value","playerUsername","disabled","playerGuild","playerDiscord","Button","className","onClick","React","Component","GuildCard","getUserInfo","applyUserToGuild","togglePublicProfile","closePublicProfileModal","userLoggedIn","publicProfileModal","playerUid","didPlayerApply","buttonDisabled","_this2","Fire","auth","onAuthStateChanged","user","setState","currentUser","uid","console","log","firestore","collection","where","get","then","snapshot","forEach","doc","id","data","catch","err","_this3","adminUid","applicantUid","path","exists","update","applicants","FieldValue","arrayUnion","prevState","_this4","Col","sm","Card","body","inverse","backgroundColor","borderColor","CardBody","CardTitle","guildFaction","guildName","CardSubtitle","guildRegion","guildServer","href","gmStyle","guildMaster","components_GuildMasterModal","key","CardText","guildDesc","ProfileModal","getUser","handleChange","setEditDisabled","editDisabled","profileUsername","profileEmail","profileDiscord","profileUid","e","defineProperty","target","set","username","discord","email","userUid","JSON","stringify","parse","onChange","FormText","setUserProfile","AddGuildModal","closeModal","ucFirst","toggleFactionSelect","toggleRegionSelect","toggleServerSelect","setRegionEU","setRegionUS","setFactionA","setFactionH","getServers","checkGuildData","addGuildToDB","guildNameError","guildRegionError","guildServerError","guildDescError","guildFactionError","factionColor","regionSelect","factionSelect","serverSelect","s","charAt","toUpperCase","slice","servers","serverList","serverArray","map","lists","push","clickedKey","serverName","server","length","window","location","reload","isModalShow","Badge","placeholder","InputGroup","InputGroupButtonDropdown","addonType","DropdownToggle","DropdownMenu","DropdownItem","modifiers","setMaxHeight","enabled","order","fn","_objectSpread","styles","overflow","maxHeight","serverDetail","ManageGuildModal","defaultValue","InputGroupAddon","InputGroupText","DeleteGuildModal","deleteUserGuild","deleteGuild","toLowerCase","delete","ModalFooter","DeleteProfileModal","deleteUserProfile","password","signInWithEmailAndPassword","res","LoggedIn","logout","toggleProfile","updateUsername","getUserEmail","toggleAddGuild","toggleManageGuild","toggleDeleteProfileModal","toggleDeleteGuildModal","getGuildInfo","closeProfileModal","closeManageGuildModal","closeAddGuildModal","closeDeleteGuildModal","closeDeleteProfileModal","profileModal","addGuildModal","manageGuildModal","deleteGuildModal","deleteProfileModal","userHasGuild","signOut","guild","NavItem","NavLink","components_ProfileModal","UncontrolledDropdown","nav","inNavbar","caret","right","components_ManageGuildModal","components_AddGuildModal","isRegionOpen","isFactionOpen","components_DeleteGuildModal","divider","components_DeleteProfileModal","RegisterModal","checkPlayerData","usernameError","discordError","emailError","passwordError","createUserWithEmailAndPassword","error","code","signup","LoginModal","login","u","LoggedOut","toggleLoginModal","toggleRegisterModal","closeRegisterModal","closeLoginModal","loginModal","registerModal","components_RegisterModal","components_LoginModal","Directory","toggleNav","authListener","renderLoginOptions","components_LoggedIn","components_LoggedOut","Navbar","dark","expand","sticky","NavbarToggler","Collapse","navbar","Nav","App","getUserUID","guildInfo","renderCards","guilds","gmGuildFaction","guildComp","components_GuildCard","CardDeck","components_Directory","Boolean","hostname","match","ReactDOM","render","src_components_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.63e9328b.chunk.js","sourcesContent":["import firebase from 'firebase'\r\n\r\n/* \r\nIt's fine to expose this stuff, but make sure you have security rules setup server-side in Firebase. \r\nOtherwise, anyone can whatever they want to your DB.\r\n\r\nRead this craptastic article -- the 2 steps outlined are what you should do\r\nhttps://medium.com/@impaachu/how-to-secure-your-firebase-project-even-when-your-api-key-is-publicly-available-a462a2a58843 \r\nhttps://firebase.google.com/docs/reference/security/database/\r\n*/\r\n\r\nconst config = {\r\n\tapiKey: \"AIzaSyCfRNMojIm31NBzNqvRpyrtgXBV4l3NpLM\",\r\n\tauthDomain: \"guild-recruit.firebaseapp.com\",\r\n\tdatabaseURL: \"https://guild-recruit.firebaseio.com\",\r\n\tprojectId: \"guild-recruit\",\r\n\tstorageBucket: \"guild-recruit.appspot.com\",\r\n\tmessagingSenderId: \"39854529631\",\r\n\tappId: \"1:39854529631:web:84a8510aaaa11a1f\"\r\n};\r\nfirebase.initializeApp(config);\r\nfirebase.database()\r\n\r\nexport default firebase","import React from 'react'\r\nimport {\r\n  Modal,\r\n  ModalBody,\r\n  Form,\r\n  FormGroup,\r\n  Label,\r\n  Input,\r\n  Button } from 'reactstrap'\r\n\r\nclass GuildMasterModal extends React.Component {\r\n  constructor(props) {\r\n    super(props)\r\n\r\n    this.sendData = this.sendData.bind(this)\r\n\r\n    this.state = {\r\n\r\n    }\r\n  }\r\n\r\n  sendData() {\r\n    this.props.callback(false)\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      // values have to be filled with guild master\r\n      <Modal isOpen={this.props.isShow} toggle={this.sendData}>\r\n        <ModalBody>\r\n          <Form>\r\n            <FormGroup>\r\n                <Label style={{ color: '#000' }} for=\"username\">Username</Label>\r\n                <Input type=\"username\" name=\"playerUsername\" value={this.state.playerUsername} disabled/>\r\n            </FormGroup>\r\n            <FormGroup>\r\n              <Label style={{ color: '#000' }} for=\"email\">Guild</Label>\r\n              <Input type=\"text\" name=\"guild\" value={this.state.playerGuild} disabled />\r\n            </FormGroup>\r\n            <FormGroup>\r\n              <Label style={{ color: '#000' }} for=\"discord\">Discord</Label>\r\n              <Input type=\"text\" name=\"playerDiscord\" value={this.state.playerDiscord} disabled/>\r\n            </FormGroup>\r\n            <Button className=\"btn-float-r btn-spacing\" color=\"secondary\" onClick={this.sendData}>Close</Button>\r\n          </Form>\r\n        </ModalBody>\r\n      </Modal>\r\n    )\r\n  }\r\n}\r\n\r\nexport default GuildMasterModal","import React from 'react'\r\nimport Fire from './Fire'\r\nimport GuildMasterModal from './GuildMasterModal'\r\nimport {\r\n  Card,\r\n  CardText,\r\n  CardBody,\r\n  CardTitle,\r\n  CardSubtitle,\r\n  Button,\r\n  Col } from 'reactstrap'\r\n\r\nclass GuildCard extends React.Component {\r\n  constructor(props) {\r\n    super(props)\r\n\r\n    this.getUserInfo = this.getUserInfo.bind(this)\r\n    this.applyUserToGuild = this.applyUserToGuild.bind(this)\r\n    this.togglePublicProfile = this.togglePublicProfile.bind(this)\r\n    this.closePublicProfileModal = this.closePublicProfileModal.bind(this)\r\n\r\n    this.state = {\r\n      userLoggedIn: false,\r\n      publicProfileModal: false,\r\n      playerUid: '',\r\n      didPlayerApply: 'Apply',\r\n      buttonDisabled: false\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.getUserInfo()\r\n  }\r\n\r\n  getUserInfo() {\r\n    Fire.auth().onAuthStateChanged( user => {\r\n      if(user) {\r\n        this.setState({ \r\n          userLoggedIn: true,\r\n          playerUid: Fire.auth().currentUser.uid\r\n         })\r\n      } else {\r\n        this.setState({ userLoggedIn: false })\r\n      }\r\n    })\r\n\r\n    console.log(this.state.userLoggedIn)\r\n    \r\n    // check for guilds applied to\r\n    var path = Fire.firestore().collection('guilds')\r\n    var query = path.where(\"applicants\", \"array-contains\", this.state.playerUid)\r\n    \r\n    query.get().then(snapshot => {\r\n      snapshot.forEach(doc => {\r\n        console.log(doc.id, \"=>\", doc.data());\r\n      })\r\n    }).catch(err => {\r\n      console.log(\"Error fetching: \", err)\r\n    })\r\n  }\r\n\r\n  applyUserToGuild() {\r\n    var adminUid = this.props.id\r\n    var applicantUid = this.state.playerUid\r\n    var path = Fire.firestore().collection('guilds').doc(adminUid)\r\n    \r\n    path.get().then(doc => {\r\n        if(doc.exists) {\r\n          path.update({ applicants: Fire.firestore.FieldValue.arrayUnion(applicantUid) })\r\n            .then(() => {\r\n              // at this point they've applied\r\n              this.setState({ \r\n                didPlayerApply: 'Applied',\r\n                buttonDisabled: true,\r\n               })\r\n            });\r\n        } else { console.log(\"No such document!\") }\r\n    })\r\n  }\r\n\r\n  togglePublicProfile() {\r\n    this.setState(prevState => ({\r\n      publicProfileModal: !prevState.publicProfileModal\r\n    }))\r\n  }\r\n\r\n  closePublicProfileModal(data) {\r\n    this.setState({ publicProfileModal: data })\r\n  }\r\n\r\n  render() {\r\n    return (\r\n        <Col sm=\"4\">\r\n          <Card body inverse className=\"the-boxes\" style={{ backgroundColor: '#333', borderColor: '#FFF' }}>\r\n            <CardBody className=\"guild-box\">\r\n              <CardTitle className={this.props.guildFaction}>{this.props.guildName}</CardTitle>\r\n              <CardSubtitle className=\"ras text-muted\">{this.props.guildRegion}</CardSubtitle>\r\n              <CardSubtitle className=\"ras text-muted\">{this.props.guildServer}</CardSubtitle>\r\n              <CardSubtitle className=\"gm-spacing\">\r\n                <span className=\"text-muted\">GM:</span>\r\n                <button id={this.props.id} href=\"#\" onClick={() => {this.togglePublicProfile(); return false;}} className={this.props.gmStyle}>{this.props.guildMaster}</button>\r\n              </CardSubtitle>\r\n              <GuildMasterModal key=\"ppModal\" callback={this.closePublicProfileModal} isShow={this.state.publicProfileModal} />\r\n              <hr className=\"hr-divider\" />\r\n              <CardText>{this.props.guildDesc}</CardText>\r\n              {this.state.userLoggedIn \r\n                ? <Button id={this.props.id} onClick={this.applyUserToGuild} disabled={this.state.buttonDisabled}>{this.state.didPlayerApply}</Button>\r\n                : <div></div> }\r\n            </CardBody>\r\n          </Card>\r\n        </Col>\r\n    )\r\n  }\r\n}\r\n\r\nexport default GuildCard\r\n","import React from 'react'\r\nimport Fire from './Fire'\r\nimport {\r\n  Modal,\r\n  ModalBody,\r\n  Form,\r\n  FormGroup,\r\n  Label,\r\n  Input,\r\n  FormText,\r\n  Button } from 'reactstrap'\r\n\r\nclass ProfileModal extends React.Component {\r\n  constructor(props) {\r\n    super(props)\r\n\r\n    this.getUser = this.getUser.bind(this)\r\n    this.sendData = this.sendData.bind(this)\r\n    this.handleChange = this.handleChange.bind(this)\r\n    this.setEditDisabled = this.setEditDisabled.bind(this)\r\n\r\n    this.state = {\r\n      editDisabled: true,\r\n      profileUsername: '',\r\n      profileEmail: '',\r\n      profileDiscord: '',\r\n      profileUid: ''\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.getUser()\r\n  }\r\n\r\n  handleChange(e) {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  }\r\n\r\n  sendData() {\r\n    this.props.callback(false)\r\n  }\r\n\r\n  setEditDisabled() {\r\n    this.setState(prevState => ({\r\n      editDisabled: !prevState.editDisabled\r\n    }))\r\n  }\r\n\r\n  setUserProfile() {\r\n    Fire.firestore().collection('users').doc(this.state.profileUid).set({\r\n      username: this.state.profileUsername,\r\n      discord: this.state.profileDiscord,\r\n      email: this.state.profileEmail\r\n    }).then(() => {\r\n      console.log(\"Written to Firestore\")\r\n    }).catch(err => {\r\n      console.log(\"Error writing to DB: \", err)\r\n    })\r\n  }\r\n\r\n  getUser() {\r\n    Fire.auth().onAuthStateChanged( user => {\r\n      if(user) {\r\n        const userUid = Fire.auth().currentUser.uid\r\n        this.setState({ \r\n          profileEmail: user.email,\r\n          profileUid: userUid \r\n        })\r\n        Fire.firestore().collection('users').doc(this.state.profileUid).get().then(doc => {\r\n          if(doc.exists) {\r\n            var data = JSON.stringify(doc.data())\r\n            var user = JSON.parse(data)\r\n            this.setState({ \r\n              profileUsername: user.username,\r\n              profileDiscord: user.discord\r\n             })\r\n          }\r\n        })\r\n      }\r\n    })\r\n  } \r\n\r\n  render() {\r\n    return(\r\n      <Modal isOpen={this.props.isShow} toggle={this.sendData}>\r\n        <ModalBody>\r\n          <Form>\r\n            <FormGroup>\r\n              <Label style={{ color: '#000' }} for=\"username\">Username</Label>\r\n              <Input type=\"username\" name=\"profileUsername\" value={this.state.profileUsername} onChange={this.handleChange} disabled={this.state.editDisabled} />\r\n            </FormGroup>\r\n            <FormGroup>\r\n              <Label style={{ color: '#000' }} for=\"email\">Email</Label>\r\n              <Input type=\"email\" name=\"email\" value={this.state.profileEmail} disabled />\r\n            </FormGroup>\r\n            <FormGroup>\r\n              <Label style={{ color: '#000' }} for=\"discord\">Discord</Label>\r\n              <Input type=\"text\" name=\"profileDiscord\" value={this.state.profileDiscord} onChange={this.handleChange} disabled={this.state.editDisabled} />\r\n              <FormText color=\"muted\">\r\n                Example: chelk#4281\r\n              </FormText>\r\n            </FormGroup>\r\n            <Button className=\"btn-float-r btn-spacing\" color=\"secondary\" onClick={this.sendData}>Close</Button>\r\n            {this.state.editDisabled \r\n            ? <Button className=\"btn-float-r btn-spacing\" \r\n                      color=\"info\"\r\n                      onClick={this.setEditDisabled}>\r\n                      Edit\r\n                </Button>\r\n            : <Button className=\"btn-float-r btn-spacing\" \r\n                      color=\"success\"\r\n                      onClick={() => {this.setEditDisabled(); this.setUserProfile(); this.sendData()}}>\r\n                      Update\r\n              </Button>}\r\n          </Form>\r\n        </ModalBody>\r\n      </Modal>\r\n    )\r\n  }\r\n}\r\n\r\nexport default ProfileModal","import React from 'react'\r\nimport servers from './servers.json'\r\nimport Fire from './Fire'\r\nimport {\r\n  Modal,\r\n  ModalBody,\r\n  Form,\r\n  FormGroup,\r\n  Badge,\r\n  Input,\r\n  InputGroup,\r\n  InputGroupButtonDropdown,\r\n  DropdownToggle,\r\n  DropdownMenu,\r\n  DropdownItem,\r\n  FormText,\r\n  Button } from 'reactstrap'\r\n\r\nclass AddGuildModal extends React.Component {\r\n  constructor(props){\r\n    super(props)\r\n\r\n    this.closeModal = this.closeModal.bind(this)\r\n    this.ucFirst = this.ucFirst.bind(this)\r\n    this.toggleFactionSelect = this.toggleFactionSelect.bind(this)\r\n    this.toggleRegionSelect = this.toggleRegionSelect.bind(this)\r\n    this.toggleServerSelect = this.toggleServerSelect.bind(this)\r\n    this.setRegionEU = this.setRegionEU.bind(this)\r\n    this.setRegionUS = this.setRegionUS.bind(this)\r\n    this.setFactionA = this.setFactionA.bind(this)\r\n    this.setFactionH = this.setFactionH.bind(this)\r\n    this.getServers = this.getServers.bind(this)\r\n    this.handleChange = this.handleChange.bind(this)\r\n    this.checkGuildData = this.checkGuildData.bind(this)\r\n    this.addGuildToDB = this.addGuildToDB.bind(this)\r\n    this.getUser = this.getUser.bind(this)\r\n\r\n    this.state = {\r\n      profileUid: '',\r\n      profileUsername: '',\r\n      guildName: '',\r\n      guildNameError: '',\r\n      guildRegion: '',\r\n      guildRegionError: '',\r\n      guildServer: '',\r\n      guildServerError: '',\r\n      guildDesc: '',\r\n      guildDescError: '',\r\n      guildFaction: '',\r\n      guildFactionError: '',\r\n      factionColor: 'secondary',\r\n      regionSelect: false,\r\n      factionSelect: false,\r\n      serverSelect: false\r\n    }\r\n  }\r\n\r\n  componentWillMount() {\r\n    this.getUser()\r\n  }\r\n\r\n  handleChange(e) {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  }\r\n\r\n  ucFirst(s) {\r\n    if (typeof s !== 'string') return ''\r\n    return s.charAt(0).toUpperCase() + s.slice(1);\r\n  }\r\n\r\n  toggleFactionSelect() {\r\n    this.setState(prevState => ({\r\n      factionSelect: !prevState.factionSelect\r\n    }))\r\n  }\r\n\r\n  toggleRegionSelect() {\r\n    this.setState(prevState => ({\r\n     regionSelect: !prevState.regionSelect\r\n   }))\r\n  }\r\n\r\n  toggleServerSelect() {\r\n   this.setState(prevState => ({\r\n     serverSelect: !prevState.serverSelect\r\n   }))\r\n  }\r\n  \r\n  closeModal() {\r\n    this.props.callback(false)\r\n  }\r\n\r\n  setRegionEU() {\r\n    this.setState({ guildRegion: 'EU'})\r\n  }\r\n\r\n  setRegionUS() {\r\n    this.setState({ guildRegion: 'US' })\r\n  }\r\n\r\n  setFactionA() {\r\n    this.setState({ guildFaction: 'Alliance' })\r\n    this.setState({ factionColor: 'primary' })\r\n  }\r\n\r\n  setFactionH() {\r\n    this.setState({ guildFaction: 'Horde' })\r\n    this.setState({ factionColor: 'danger' })\r\n  }\r\n\r\n  getUser() {\r\n    Fire.auth().onAuthStateChanged(user => {\r\n      if(user) {\r\n        const userUid = Fire.auth().currentUser.uid\r\n        this.setState({ profileUid: userUid })\r\n      }\r\n      Fire.firestore().collection('users').doc(this.state.profileUid).get().then(doc => {\r\n        if(doc.exists) {\r\n          var data = JSON.stringify(doc.data())\r\n          var user = JSON.parse(data)\r\n          this.setState({ profileUsername: user.username })\r\n        }\r\n      })\r\n    })\r\n  }\r\n\r\n  getServers(e) {\r\n    var data = JSON.stringify(servers)\r\n    var serverList = JSON.parse(data)\r\n    var serverArray = []\r\n\r\n      // eslint-disable-next-line array-callback-return\r\n      serverList.map((lists) => {\r\n        serverArray.push(lists)\r\n      })\r\n    var clickedKey = e.target.id\r\n    var serverName = serverArray[clickedKey - 1]\r\n    this.setState({ guildServer: serverName.server })\r\n  }\r\n\r\n  checkGuildData() {\r\n    this.setState({\r\n      guildDescError: '',\r\n      guildNameError: '',\r\n      guildRegionError: '',\r\n      guildServerError: '',\r\n      guildFactionError: ''\r\n    })\r\n\r\n    if (!this.state.guildName) {\r\n      this.setState({ guildNameError: 'Guild Name is empty!'})\r\n    } else if(!this.state.guildFaction) {\r\n      this.setState({ guildFactionError: 'Faction isn\\'t selected!'})\r\n    } else if(!this.state.guildRegion) {\r\n      this.setState({ guildRegionError: 'Region isn\\'t selected!'})\r\n    } else if(!this.state.guildServer) {\r\n      this.setState({ guildServerError: 'Server isn\\'t selected!' })\r\n    } else if(!this.state.guildDesc) {\r\n      this.setState({ guildDescError: 'Description is blank!' })\r\n    } else if (this.state.guildName.length < 3 || this.state.guildName.length > 24) {\r\n      this.setState({ guildNameError: 'Error in Guild Name length!'})\r\n    } else if(this.state.guildDesc.length > 140) {\r\n      this.setState({ guildDescError: 'Description is too long!'})\r\n    } else if(this.state.guildDesc.length < 10) {\r\n      this.setState({ guildDescError: 'Description is too short!'})\r\n    } else {\r\n      this.addGuildToDB()\r\n    }\r\n  }\r\n\r\n  addGuildToDB() {\r\n    Fire.firestore().collection('guilds').doc(this.state.profileUid)\r\n    .set({\r\n      guildMaster: this.state.profileUsername,\r\n      guildName: this.state.guildName,\r\n      guildRegion: this.state.guildRegion + \"-\",\r\n      guildServer: this.ucFirst(this.state.guildServer),\r\n      guildDesc: this.ucFirst(this.state.guildDesc),\r\n      guildFaction: this.ucFirst(this.state.guildFaction),\r\n      applicants: []\r\n    }).then(() => {\r\n      console.log(\"Successfully written to Firestore\")\r\n      window.location.reload()\r\n    }).catch(err => {\r\n      console.log(\"Error writing to DB: \", err)\r\n    })\r\n  }\r\n\r\n  render() {\r\n    return(\r\n      <Modal isOpen={this.props.isModalShow} toggle={this.closeModal}>\r\n        <ModalBody>\r\n        <Form>\r\n          <FormGroup>\r\n            <Badge color=\"danger\" className=\"badge-spacing visible\">{this.state.guildNameError}</Badge>\r\n            <Input type=\"text\" name=\"guildName\" value={this.state.guildName} onChange={this.handleChange} placeholder=\"Guild Name\" />\r\n          </FormGroup>\r\n          <FormGroup>\r\n            <Badge color=\"danger\" className=\"badge-spacing visible\">{this.state.guildFactionError}{this.state.guildRegionError}{this.state.guildServerError}</Badge>\r\n            <InputGroup>\r\n              <InputGroupButtonDropdown addonType=\"append\" isOpen={this.state.factionSelect} toggle={this.toggleFactionSelect}>\r\n                <DropdownToggle color={this.state.factionColor}>\r\n                  {this.state.guildFaction ? this.state.guildFaction : \"Faction\"}\r\n                </DropdownToggle>\r\n                <DropdownMenu>\r\n                  <DropdownItem onClick={this.setFactionA}>Alliance</DropdownItem>\r\n                  <DropdownItem onClick={this.setFactionH}>Horde</DropdownItem>\r\n                </DropdownMenu>\r\n              </InputGroupButtonDropdown>\r\n              <InputGroupButtonDropdown addonType=\"append\" isOpen={this.state.regionSelect} toggle={this.toggleRegionSelect}>\r\n                <DropdownToggle>\r\n                  {this.state.guildRegion ? this.state.guildRegion : \"Region\"}\r\n                </DropdownToggle>\r\n                <DropdownMenu>\r\n                  <DropdownItem onClick={this.setRegionEU}>EU</DropdownItem>\r\n                  <DropdownItem onClick={this.setRegionUS}>US</DropdownItem>\r\n                </DropdownMenu>\r\n              </InputGroupButtonDropdown>\r\n              <InputGroupButtonDropdown addonType=\"append\" isOpen={this.state.serverSelect} toggle={this.toggleServerSelect}>\r\n                <DropdownToggle>\r\n                  {this.state.guildServer ? this.state.guildServer : \"Server\"}\r\n                </DropdownToggle>\r\n                <DropdownMenu\r\n                  modifiers={{\r\n                    setMaxHeight: {\r\n                      enabled: true,\r\n                      order: 890,\r\n                      fn: (data) => {\r\n                        return {\r\n                          ...data,\r\n                          styles: {\r\n                            ...data.styles,\r\n                            overflow: 'auto',\r\n                            maxHeight: 175,\r\n                          },\r\n                        };\r\n                      },\r\n                    },\r\n                  }}>\r\n                  {servers.map((serverDetail) => {\r\n                    return <DropdownItem key={serverDetail.id} id={serverDetail.id} onClick={this.getServers}>{serverDetail.server}</DropdownItem>\r\n                  })}\r\n                </DropdownMenu>\r\n              </InputGroupButtonDropdown>\r\n            </InputGroup>\r\n          </FormGroup>\r\n          <FormGroup>\r\n            <Badge color=\"danger\" className=\"badge-spacing visible\">{this.state.guildDescError}</Badge>\r\n            <Input type=\"textarea\" name=\"guildDesc\" value={this.state.guildDesc} onChange={this.handleChange} placeholder=\"Description\" />\r\n            <FormText color={this.state.guildDesc.length > 140 ? \"danger\" : \"muted\"}>\r\n              Character count: {this.state.guildDesc.length} / 140\r\n            </FormText>\r\n          </FormGroup>\r\n          <Button className=\"btn-float-r btn-spacing\" color=\"secondary\" onClick={this.closeModal}>Close</Button>\r\n          <Button className=\"btn-float-r\" color=\"success\" onClick={this.checkGuildData}>Create</Button>\r\n        </Form>\r\n        </ModalBody>\r\n      </Modal>\r\n    )\r\n  }\r\n}\r\n\r\nexport default AddGuildModal","import React from 'react'\r\nimport {\r\n  Modal,\r\n  ModalBody,\r\n  Form,\r\n  FormGroup,\r\n  Label,\r\n  Input,\r\n  InputGroup,\r\n  InputGroupAddon,\r\n  InputGroupText,\r\n  Button } from 'reactstrap'\r\n\r\nclass ManageGuildModal extends React.Component {\r\n  constructor(props) {\r\n    super(props)\r\n\r\n    this.sendData = this.sendData.bind(this)\r\n  }\r\n\r\n  sendData() {\r\n    this.props.callback(false)\r\n  }\r\n\r\n  render() {\r\n    return(\r\n      <Modal isOpen={this.props.isShow} toggle={this.sendData}>\r\n        <ModalBody>\r\n          <Form>\r\n            <FormGroup>\r\n              <Label style={{ color: '#000' }} for=\"guildName\">Guild Name</Label>\r\n              <Input className=\"info-font\" type=\"text\" name=\"guildName\" defaultValue={this.props.guildName} disabled />\r\n            </FormGroup>\r\n            <FormGroup>\r\n              <Label style={{ color: '#000' }} for=\" guild\">Guild Server</Label>\r\n              <InputGroup>\r\n                <InputGroupAddon addonType=\"prepend\">\r\n                  <InputGroupText className=\"info-font\" >{this.props.guildFaction}</InputGroupText>\r\n                  <InputGroupText className=\"info-font\" >{this.props.guildRegion}</InputGroupText>\r\n                </InputGroupAddon>\r\n                <Input className=\"info-font\" type=\"text\" name=\"guildName\" defaultValue={this.props.guildServer} disabled/>\r\n              </InputGroup>\r\n            </FormGroup>\r\n            <FormGroup>\r\n              <Label style={{ color: '#000' }} for=\"guildDesc\">Guild Description</Label>\r\n              <Input className=\"info-font\" type=\"textarea\" name=\"guildDesc\" defaultValue={this.props.guildDesc} disabled />\r\n            </FormGroup>\r\n            <Button className=\"btn-float-r btn-spacing\" color=\"secondary\" onClick={this.sendData}>Close</Button>\r\n          </Form>\r\n        </ModalBody>\r\n      </Modal>\r\n    )\r\n  }\r\n}\r\n\r\nexport default ManageGuildModal","import React from 'react'\r\nimport Fire from './Fire'\r\nimport {\r\n  Modal,\r\n  ModalBody,\r\n  ModalFooter,\r\n  Button,\r\n  Input } from 'reactstrap'\r\n\r\nclass DeleteGuildModal extends React.Component {\r\n  constructor(props) {\r\n    super(props)\r\n\r\n    this.deleteUserGuild = this.deleteUserGuild.bind(this)\r\n    this.getUser = this.getUser.bind(this)\r\n    this.handleChange = this.handleChange.bind(this)\r\n\r\n    this.state = {\r\n      profileUid: '',\r\n      deleteGuild: ''\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.getUser()\r\n  }\r\n\r\n  handleChange(e) {\r\n    this.setState({ [e.target.name]: e.target.value.toLowerCase() });\r\n  }\r\n\r\n  getUser() {\r\n    Fire.auth().onAuthStateChanged( user => {\r\n      if(user) {\r\n        const userUid = Fire.auth().currentUser.uid\r\n        this.setState({ profileUid: userUid })\r\n      }\r\n    })\r\n  }\r\n\r\n  deleteUserGuild() {\r\n    Fire.firestore().collection('guilds').doc(this.state.profileUid).delete()\r\n      .then(() => {\r\n        console.log(\"Document deleted successfully\")\r\n        window.location.reload()\r\n      }).catch(err => {\r\n        console.log(\"Error deleting document: \", err)\r\n      })\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Modal isOpen={this.props.isModalShow} toggle={this.props.callback}>\r\n        <ModalBody>\r\n          <span className=\"delete-font\">\r\n          Are you sure you want to permanently delete your guild? Doing so will delete the following:\r\n            <ul className=\"no-dots\">\r\n              <li> - Guild</li>\r\n              <li> - Guild Applications</li>\r\n            </ul>\r\n          Type delete if you wish to proceed\r\n          <Input type=\"delete\" name=\"deleteGuild\" value={this.state.deleteGuild} onChange={this.handleChange} />\r\n          </span>\r\n        </ModalBody>\r\n        <ModalFooter>\r\n          <Button color=\"success\" disabled={(this.state.deleteGuild === 'delete' ? false : true)} onClick={() => {this.deleteUserGuild(); this.props.callback(false)}}>Delete</Button>\r\n          <Button color=\"danger\" onClick={this.props.callback}>Nevermind</Button>\r\n        </ModalFooter>\r\n      </Modal>\r\n    )\r\n  }\r\n}\r\n\r\nexport default DeleteGuildModal","import React from 'react'\r\nimport Fire from './Fire'\r\nimport {\r\n  Modal,\r\n  ModalBody,\r\n  ModalFooter,\r\n  Button,\r\n  Input,\r\n  Label } from 'reactstrap'\r\n\r\nclass DeleteProfileModal extends React.Component {\r\n  constructor(props) {\r\n    super(props)\r\n\r\n    this.getUser = this.getUser.bind(this)\r\n    this.closeModal = this.closeModal.bind(this)\r\n    this.handleChange = this.handleChange.bind(this)\r\n    this.deleteUserProfile = this.deleteUserProfile.bind(this)\r\n\r\n    this.state = {\r\n      profileUid: '',\r\n      password: '',\r\n      email: ''\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.getUser()\r\n  }\r\n\r\n  closeModal() {\r\n    this.props.callback(false)\r\n  }\r\n\r\n  handleChange(e) {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n}\r\n\r\n  getUser() {\r\n    Fire.auth().onAuthStateChanged( user => {\r\n      if(user) {\r\n        const userUid = Fire.auth().currentUser.uid\r\n        this.setState({ \r\n          profileUid: userUid,\r\n          email: user.email \r\n        })\r\n      }\r\n    })\r\n  }\r\n\r\n  deleteUserProfile() {\r\n    Fire.auth().signInWithEmailAndPassword(this.state.email, this.state.password)\r\n    .then(res => {\r\n      Fire.firestore().collection('guilds').doc(this.state.profileUid).get().then(doc => {\r\n        if(doc.exists) {\r\n          Fire.firestore().collection('guilds').doc(this.state.profileUid).delete()\r\n          console.log(\"Guild deleted (PROFILE DELETE METHOD)\")\r\n        }\r\n      })\r\n\r\n      Fire.firestore().collection('users').doc(this.state.profileUid).delete()\r\n      .then(() => {\r\n        console.log(\"Document deleted successfully\")\r\n        Fire.auth().currentUser.delete().then(() => {\r\n          console.log(\"User deleted successfully\")\r\n        }).catch(err => {\r\n          console.log(\"Error deleting user: \", err)\r\n        })\r\n      }).catch(err => {\r\n        console.log(\"Error deleting document: \", err)\r\n      })\r\n    }).catch((err) => {\r\n        if(err) {\r\n          console.log(err)\r\n        }\r\n      })\r\n    }\r\n  \r\n  render() {\r\n    return (\r\n      <Modal isOpen={this.props.isModalShow} toggle={this.closeModal}>\r\n        <ModalBody>\r\n          <span className=\"delete-font\">\r\n            Are you sure you want to permanently delete your account? Doing so will delete the following:\r\n            <ul className=\"no-dots\">\r\n              <li> - Guild (If applicable)</li>\r\n              <li> - Guild applications (If applicable)</li>\r\n              <li> - Profile</li>\r\n            </ul>\r\n          </span>\r\n          <Label for=\"password\">Password</Label>\r\n          <Input type=\"password\" name=\"password\" value={this.state.password} onChange={this.handleChange} />\r\n        </ModalBody>\r\n        <ModalFooter>\r\n          <Button color=\"success\" onClick={() => {this.deleteUserProfile(); this.closeModal()}} disabled={this.state.password.length <= 0 ? true : false}>Delete</Button>\r\n          <Button color=\"danger\" onClick={this.closeModal}>Nevermind</Button>\r\n        </ModalFooter>\r\n      </Modal>\r\n    )\r\n  }\r\n}\r\n\r\nexport default DeleteProfileModal","import React from 'react'\r\nimport Fire from './Fire'\r\nimport ProfileModal from './ProfileModal'\r\nimport AddGuildModal from './AddGuildModal'\r\nimport ManageGuildModal from './ManageGuildModal'\r\nimport DeleteGuildModal from './DeleteGuildModal'\r\nimport DeleteProfileModal from './DeleteProfileModal'\r\nimport {\r\n  DropdownToggle,\r\n  DropdownMenu,\r\n  DropdownItem,\r\n  NavLink,\r\n  NavItem,\r\n  UncontrolledDropdown\r\n} from 'reactstrap'\r\n\r\nclass LoggedIn extends React.Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.logout = this.logout.bind(this)\r\n    this.toggleProfile = this.toggleProfile.bind(this)\r\n    this.updateUsername = this.updateUsername.bind(this)\r\n    this.handleChange = this.handleChange.bind(this)\r\n    this.getUserEmail = this.getUserEmail.bind(this)\r\n    this.toggleAddGuild = this.toggleAddGuild.bind(this)\r\n    this.toggleManageGuild = this.toggleManageGuild.bind(this)\r\n    this.toggleDeleteProfileModal = this.toggleDeleteProfileModal.bind(this)\r\n    this.toggleDeleteGuildModal = this.toggleDeleteGuildModal.bind(this)\r\n    this.ucFirst = this.ucFirst.bind(this)\r\n    this.getGuildInfo = this.getGuildInfo.bind(this)\r\n    this.closeProfileModal = this.closeProfileModal.bind(this)\r\n    this.closeManageGuildModal = this.closeManageGuildModal.bind(this)\r\n    this.closeAddGuildModal = this.closeAddGuildModal.bind(this)\r\n    this.closeDeleteGuildModal = this.closeDeleteGuildModal.bind(this)\r\n    this.closeDeleteProfileModal = this.closeDeleteProfileModal.bind(this)\r\n\r\n    this.state = {\r\n      profileUid: '',\r\n      profileUsername: '',\r\n      profileModal: false,\r\n      addGuildModal: false,\r\n      manageGuildModal: false,\r\n      deleteGuildModal: false,\r\n      deleteProfileModal: false,\r\n      guildName: '',\r\n      guildRegion: '',\r\n      guildServer: '',\r\n      guildDesc: '',\r\n      guildFaction: '',\r\n      userHasGuild: false\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.getUserEmail()\r\n  }\r\n\r\n  logout() {\r\n    Fire.auth().signOut();\r\n  }\r\n\r\n  updateUsername(value) {\r\n    this.setState({ profileUsername: value })\r\n  }\r\n\r\n  handleChange(e) {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  }\r\n\r\n  ucFirst(s) {\r\n    if (typeof s !== 'string') return ''\r\n    return s.charAt(0).toUpperCase() + s.slice(1);\r\n  }\r\n\r\n  toggleProfile() {\r\n    this.setState(prevState => ({\r\n      profileModal: !prevState.profileModal\r\n    }))\r\n  }\r\n\r\n  toggleAddGuild() {\r\n    this.setState(prevState => ({\r\n      addGuildModal: !prevState.addGuildModal\r\n    }))\r\n  }\r\n\r\n  toggleManageGuild() {\r\n    this.setState(prevState => ({\r\n      manageGuildModal: !prevState.manageGuildModal\r\n    }))\r\n  }\r\n\r\n  toggleDeleteGuildModal() {\r\n    this.setState(prevState => ({\r\n      deleteGuildModal: !prevState.deleteGuildModal\r\n    }))\r\n  }\r\n\r\n  toggleDeleteProfileModal() {\r\n    this.setState(prevState => ({\r\n      deleteProfileModal: !prevState.deleteProfileModal\r\n    }))\r\n  }\r\n\r\n  closeProfileModal() {\r\n    this.setState({ profileModal: false })\r\n  }\r\n\r\n  closeManageGuildModal() {\r\n    this.setState({ manageGuildModal: false })\r\n  }\r\n\r\n  closeAddGuildModal() {\r\n    this.setState({ addGuildModal: false })\r\n  }\r\n\r\n  closeDeleteGuildModal() {\r\n    this.setState({ deleteGuildModal: false })\r\n  }\r\n\r\n  closeDeleteProfileModal() {\r\n    this.setState({ deleteProfileModal: false })\r\n  }\r\n\r\n  getUserEmail() {\r\n    Fire.auth().onAuthStateChanged( user => {\r\n      if(user) {\r\n        const userUid = Fire.auth().currentUser.uid\r\n        this.setState({ \r\n          profileEmail: user.email,\r\n          profileUid: userUid\r\n        })\r\n        Fire.firestore().collection('users').doc(this.state.profileUid).get().then(doc => {\r\n          if(doc.exists) {\r\n            var data = JSON.stringify(doc.data())\r\n            var user = JSON.parse(data)\r\n            this.setState({ profileUsername: user.username })\r\n          }\r\n        })\r\n        \r\n        Fire.firestore().collection('guilds').doc(this.state.profileUid).get().then(doc => {\r\n          if(doc.exists) {\r\n            this.setState({ userHasGuild: true })\r\n          } else (\r\n            console.log(\"No guild exists for this user!\")\r\n          )\r\n        })\r\n      } else if (!user) {\r\n        console.log(\"No user!\")\r\n      }\r\n    })\r\n  }\r\n\r\n  getGuildInfo() {\r\n    Fire.firestore().collection('guilds').doc(this.state.profileUid)\r\n      .get().then(doc => {\r\n        if(doc.exists) {\r\n          var data = JSON.stringify(doc.data())\r\n          var guild = JSON.parse(data)\r\n          this.setState({ \r\n            guildName: guild.guildName,\r\n            guildFaction: guild.guildFaction,\r\n            guildRegion: guild.guildRegion.slice(0, -1),\r\n            guildServer: guild.guildServer,\r\n            guildDesc: guild.guildDesc\r\n           })\r\n        } else { console.log(\"No such document!\") }\r\n      }).catch(err => {\r\n        console.log(\"Error getting info from DB: \", err)\r\n      })\r\n  }\r\n\r\n  render() {\r\n    return ([\r\n      <NavItem>\r\n        <NavLink href=\"#\" onClick={this.toggleProfile}> {this.state.profileUsername ? this.state.profileUsername : \"Loading..\"} </NavLink>\r\n        <ProfileModal key=\"profileModal\" callback={this.closeProfileModal} isShow={this.state.profileModal} />\r\n      </NavItem>,\r\n      <UncontrolledDropdown nav inNavbar>\r\n        <DropdownToggle nav caret>\r\n          Options\r\n        </DropdownToggle>\r\n        <DropdownMenu right>\r\n          {this.state.userHasGuild \r\n          ? <DropdownItem onClick={() => {this.toggleManageGuild(); this.getGuildInfo()}}> Manage Guild </DropdownItem>\r\n          : <DropdownItem onClick={this.toggleAddGuild}>Create Guild</DropdownItem>}\r\n          \r\n          <ManageGuildModal \r\n            key=\"manageGuildModal\" \r\n            callback={this.closeManageGuildModal} \r\n            isShow={this.state.manageGuildModal}\r\n            guildName={this.state.guildName}\r\n            guildDesc={this.state.guildDesc}\r\n            guildServer={this.state.guildServer}\r\n            guildFaction={this.state.guildFaction}\r\n            guildRegion={this.state.guildRegion} />\r\n          <AddGuildModal \r\n            key=\"addGuildModal\"\r\n            callback={this.closeAddGuildModal}\r\n            isModalShow={this.state.addGuildModal}\r\n            isRegionOpen={this.state.regionSelect}\r\n            isFactionOpen={this.state.factionSelect} />\r\n\r\n          {this.state.userHasGuild \r\n          ? [<DropdownItem> Show Applicants</DropdownItem>, \r\n              <DropdownItem onClick={this.toggleDeleteGuildModal}>Delete Guild</DropdownItem>,\r\n              <DeleteGuildModal \r\n                key=\"deleteGuildModal\"\r\n                callback={this.closeDeleteGuildModal}\r\n                isModalShow={this.state.deleteGuildModal} />]\r\n          : <div></div>}\r\n          <DropdownItem divider />\r\n          <DropdownItem onClick={this.toggleDeleteProfileModal}>\r\n            Delete Account\r\n          </DropdownItem>\r\n          <DeleteProfileModal \r\n            key=\"deleteProfileModal\"\r\n            callback={this.closeDeleteProfileModal}\r\n            isModalShow={this.state.deleteProfileModal} />\r\n\r\n          <DropdownItem onClick={this.logout}>\r\n            Log Out\r\n          </DropdownItem>\r\n        </DropdownMenu>\r\n      </UncontrolledDropdown>]\r\n    )\r\n  }\r\n}\r\n\r\nexport default LoggedIn","import React from 'react'\r\nimport Fire from './Fire'\r\nimport {\r\n    Modal,\r\n    ModalBody,\r\n    Badge,\r\n    Button,\r\n    Input,\r\n    Form,\r\n    FormGroup,\r\n    FormText } from 'reactstrap'\r\n\r\nclass RegisterModal extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.checkPlayerData = this.checkPlayerData.bind(this)\r\n        this.sendData = this.sendData.bind(this)\r\n        this.handleChange = this.handleChange.bind(this)\r\n\r\n        this.state = {\r\n            isOpen: this.props.isShow,\r\n            username: '',\r\n            discord: '',\r\n            email: '',\r\n            password: '',\r\n            usernameError: '',\r\n            discordError: '',\r\n            emailError: '',\r\n            passwordError: ''\r\n        }\r\n    }\r\n\r\n    handleChange(e) {\r\n        this.setState({ [e.target.name]: e.target.value });\r\n    }\r\n\r\n    signup() {\r\n        Fire.auth().createUserWithEmailAndPassword(this.state.email, this.state.password)\r\n          .then(res => {\r\n            this.setState({ uid: res.user.uid })\r\n            Fire.firestore().collection('users').doc(this.state.uid).set({\r\n              username: this.state.username,\r\n              discord: this.state.discord,\r\n              email: this.state.email\r\n            }).then(() => {\r\n              console.log(\"Document successfully written\")\r\n            }).catch((error) => {\r\n              console.log(error);\r\n            })\r\n          })\r\n          .catch((err) => {\r\n            const errorCode = err.code;\r\n            switch(errorCode) {\r\n              case 'auth/weak-password':\r\n                this.setState({ passwordError: \"The password is too weak\" })    \r\n                break;    \r\n              // Other errors here...\r\n              default:\r\n                // Handle the scenario where an unexpected error occurs -- maybe a badge for \"unexpected error\" \r\n                // at the top of the modal?\r\n            }\r\n          })\r\n    }\r\n\r\n    checkPlayerData() {\r\n        this.setState({\r\n          usernameError: '',\r\n          discordError: '',\r\n          emailError: '',\r\n          passwordError: ''\r\n        })\r\n    \r\n        if(!this.state.email) {\r\n          this.setState({ emailError: \"Email field is empty!\" })\r\n        } else if(!this.state.password) {\r\n          this.setState({ passwordError: \"Password field is empty!\" })\r\n        } else if(!this.state.username) {\r\n          this.setState({ usernameError: \"Username field is empty!\" })\r\n        } else if(!this.state.discord) {\r\n          this.setState({ discordError: \"Discord field is empty!\" })\r\n        } else if(this.state.username.length > 14) {\r\n          this.setState({ usernameError: \"Username is too long!\" })\r\n        } else if(this.state.username.length < 3) {\r\n          this.setState({ usernameError: \"Username is too short!\" })\r\n        } else {\r\n          this.signup();\r\n        }\r\n    }\r\n\r\n    sendData() {\r\n        this.props.callback(false)\r\n    }\r\n\r\n    render() {\r\n        return (\r\n        <Modal isOpen={this.props.isShow} toggle={this.sendData}>\r\n          <ModalBody>\r\n            <Form>\r\n              <FormGroup>\r\n                <Badge color=\"danger\" className=\"badge-spacing\">{this.state.emailError}</Badge>\r\n                <Input type=\"email\" name=\"email\" value={this.state.email} onChange={this.handleChange} placeholder=\"Email\" />\r\n              </FormGroup>\r\n              <FormGroup>\r\n                <Badge color=\"danger\" className=\"badge-spacing\">{this.state.passwordError}</Badge>\r\n                <Input type=\"password\" name=\"password\" value={this.state.password} onChange={this.handleChange} placeholder=\"Password\" />\r\n              </FormGroup>\r\n              <FormGroup>\r\n                <Badge color=\"danger\" className=\"badge-spacing\">{this.state.usernameError}</Badge>\r\n                <Input type=\"username\" name=\"username\" value={this.state.username} onChange={this.handleChange} placeholder=\"Username\" />\r\n              </FormGroup>\r\n              <FormGroup>\r\n                <Badge color=\"danger\" className=\"badge-spacing\">{this.state.discordError}</Badge>\r\n                <Input type=\"text\" name=\"discord\" value={this.state.discord} onChange={this.handleChange} placeholder=\"Discord\" />\r\n                <FormText color=\"muted\">\r\n                  Example: chelk#4281\r\n                </FormText>\r\n              </FormGroup>\r\n            </Form>\r\n            <Button className=\"btn-float-r btn-spacing\" color=\"danger\" onClick={this.sendData}>Close</Button>\r\n            <Button className=\"btn-float-r\" color=\"success\" onClick={() => {\r\n              this.checkPlayerData();\r\n            }}> Register </Button>\r\n          </ModalBody>\r\n        </Modal>\r\n        )\r\n    }\r\n}\r\n\r\nexport default RegisterModal","import React from 'react'\r\nimport Fire from './Fire'\r\nimport {\r\n    Modal,\r\n    ModalBody,\r\n    Form,\r\n    FormGroup,\r\n    Input,\r\n    Button } from 'reactstrap'\r\n\r\nclass LoginModal extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.handleChange = this.handleChange.bind(this)\r\n        this.sendData = this.sendData.bind(this)\r\n        this.login = this.login.bind(this)\r\n\r\n        this.state = {\r\n            uid: '',\r\n            email: '',\r\n            password: ''\r\n        }\r\n    }\r\n\r\n    handleChange(e) {\r\n        this.setState({ [e.target.name]: e.target.value });\r\n    }\r\n\r\n    login() {\r\n        Fire.auth().signInWithEmailAndPassword(this.state.email, this.state.password)\r\n          .then((u) => {}).catch((error) => {\r\n            console.log(error);\r\n          })\r\n      }\r\n\r\n    sendData() {\r\n        this.props.callback(false)\r\n    }\r\n\r\n    render() {\r\n        return (\r\n        <Modal isOpen={this.props.isShow} toggle={this.sendData}>\r\n        <ModalBody>\r\n          <Form>\r\n            <FormGroup>\r\n              <Input type=\"email\" name=\"email\" value={this.state.email} onChange={this.handleChange} placeholder=\"Email\" />\r\n            </FormGroup>\r\n            <FormGroup>\r\n              <Input type=\"password\" name=\"password\" value={this.state.password} onChange={this.handleChange} placeholder=\"Password\" />\r\n            </FormGroup>\r\n          </Form>\r\n          <Button className=\"btn-float-r btn-spacing\" color=\"danger\" onClick={this.sendData}>Close</Button>\r\n          <Button className=\"btn-float-r\" color=\"success\" onClick={this.login}> Log in </Button>\r\n          <p className=\"error-message\" color=\"danger\">{this.props.error}</p>\r\n        </ModalBody>\r\n        </Modal>\r\n        )\r\n    }\r\n}\r\n\r\nexport default LoginModal","import React from 'react'\r\nimport RegisterModal from './RegisterModal'\r\nimport LoginModal from './LoginModal'\r\nimport {\r\n  NavItem,\r\n  NavLink } from 'reactstrap'\r\n\r\nclass LoggedOut extends React.Component {\r\n  constructor(props) {\r\n    super(props)\r\n\r\n    this.toggleLoginModal = this.toggleLoginModal.bind(this)\r\n    this.toggleRegisterModal = this.toggleRegisterModal.bind(this)\r\n    this.closeRegisterModal = this.closeRegisterModal.bind(this)\r\n    this.closeLoginModal = this.closeLoginModal.bind(this)\r\n\r\n    this.state = {\r\n      loginModal: false,\r\n      registerModal: false,\r\n      uid: ''\r\n    }\r\n  }\r\n\r\n  toggleLoginModal() {\r\n    this.setState(prevState => ({\r\n      loginModal: !prevState.loginModal\r\n    }))\r\n  }\r\n\r\n  toggleRegisterModal() {\r\n    this.setState(prevState => ({\r\n        registerModal: !prevState.registerModal\r\n      }))\r\n  }\r\n\r\n  closeRegisterModal(data) {\r\n    this.setState({ registerModal: data })\r\n  }\r\n\r\n  closeLoginModal(data) {\r\n    this.setState({ loginModal: data })\r\n  }\r\n\r\n  render() {\r\n    return([\r\n      <NavItem>\r\n        <NavLink href=\"#\" onClick={this.toggleRegisterModal}> Register </NavLink>\r\n        <RegisterModal key=\"registerModal\" callback={this.closeRegisterModal} isShow={this.state.registerModal}/>\r\n      </NavItem>,\r\n      <NavItem>\r\n        <NavLink href=\"#\" onClick={this.toggleLoginModal}> Login </NavLink>\r\n        <LoginModal key=\"loginModal\" callback={this.closeLoginModal} isShow={this.state.loginModal}/>\r\n      </NavItem>\r\n      ])\r\n  }\r\n}\r\n\r\nexport default LoggedOut","import React from 'react'\r\nimport Fire from './Fire'\r\nimport LoggedIn from './LoggedIn'\r\nimport LoggedOut from './LoggedOut'\r\nimport {\r\n  Collapse,\r\n  Navbar,\r\n  NavbarToggler,\r\n  Nav\r\n } from 'reactstrap';\r\n\r\nclass Directory extends React.Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.toggleNav = this.toggleNav.bind(this)\r\n    this.authListener = this.authListener.bind(this)\r\n    this.renderLoginOptions = this.renderLoginOptions.bind(this);\r\n    this.state = {\r\n      isOpen: false,\r\n      user: {}\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.authListener()\r\n  }\r\n\r\n  toggleNav() {\r\n    this.setState({\r\n      isOpen: !this.state.isOpen\r\n    })\r\n  }\r\n\r\n  authListener() {\r\n    Fire.auth().onAuthStateChanged((user) => {\r\n      if (user) {\r\n        this.setState({ user })\r\n      } else {\r\n        this.setState({ user: null })\r\n      }\r\n  })}\r\n\r\n  renderLoginOptions() {\r\n    // A user is logged in if the user object exists in the state \r\n    return this.state.user ? <LoggedIn /> : <LoggedOut />\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Navbar className=\"main-nav\" color=\"dark\" dark expand=\"md\" sticky=\"top\">\r\n        <NavbarToggler onClick={this.toggleNav} />\r\n        <Collapse isOpen={this.state.isOpen} navbar>\r\n          <Nav className=\"ml-auto\" navbar>\r\n          {this.renderLoginOptions()}\r\n          </Nav>\r\n        </Collapse>\r\n      </Navbar>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Directory\r\n","import React from 'react'\r\nimport GuildCard from './GuildCard'\r\nimport Directory from './Directory'\r\nimport Fire from './Fire'\r\nimport { CardDeck } from 'reactstrap'\r\nimport './App.css'\r\n\r\nclass App extends React.Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.getUserUID = this.getUserUID.bind(this)\r\n    this.guildInfo = this.guildInfo.bind(this)\r\n    this.renderCards = this.renderCards.bind(this)\r\n\r\n    this.state = {\r\n      profileUid: '',\r\n      guilds: []\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.guildInfo()\r\n    this.getUserUID()\r\n  }\r\n\r\n  getUserUID() {\r\n    Fire.auth().onAuthStateChanged( user => {\r\n      if(user) {\r\n        const userUid = Fire.auth().currentUser.uid\r\n        this.setState({ profileUid: userUid})  \r\n      }\r\n    })\r\n  }\r\n\r\n  guildInfo() {\r\n    Fire.firestore().collection('guilds')\r\n      .get().then(snapshot => {\r\n        let guilds = []\r\n          snapshot.forEach(doc => {\r\n            guilds.push({\r\n              id: doc.id,\r\n              guildDesc: doc.data().guildDesc,\r\n              guildFaction: doc.data().guildFaction,\r\n              guildName: doc.data().guildName,\r\n              guildRegion: doc.data().guildRegion,\r\n              guildServer: doc.data().guildServer,\r\n              guildMaster: doc.data().guildMaster\r\n            })\r\n          })\r\n          this.setState({guilds})\r\n        })\r\n  }\r\n\r\n  renderCards() {\r\n    var guildFaction\r\n    var gmGuildFaction\r\n    var guildComp = this.state.guilds.map(guild => {\r\n      if(guild.guildFaction === 'Alliance') {\r\n        guildFaction = 'guild-name -alliance'\r\n        gmGuildFaction = 'gm-link-text -alliance'\r\n      } else if (guild.guildFaction === 'Horde') {\r\n        guildFaction = 'guild-name -horde'\r\n        gmGuildFaction = 'gm-link-text -horde'\r\n      }\r\n      return <GuildCard key={guild.id} id={guild.id} guildMaster={guild.guildMaster} guildFaction={guildFaction} guildServer={guild.guildServer} guildName={guild.guildName} gmStyle={gmGuildFaction} guildRegion={guild.guildRegion} guildDesc={guild.guildDesc} />\r\n            })\r\n            return <CardDeck>{guildComp}</CardDeck>\r\n  }\r\n\r\n  render() {  \r\n    return(\r\n      <div className=\"main-div\">\r\n      <Directory />\r\n        {this.renderCards()}\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default App\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}