{"version":3,"sources":["components/Fire.js","components/Guilds.js","components/LoggedIn.js","components/LoggedOut.js","components/Directory.js","components/App.js","serviceWorker.js","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","database","Guilds","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","checkUserLoggedIn","bind","assertThisInitialized","state","userLoggedIn","_this2","Fire","auth","onAuthStateChanged","user","setState","react_default","a","createElement","Col","sm","Card","body","inverse","className","style","backgroundColor","borderColor","CardBody","CardTitle","faction","guildname","CardSubtitle","server","CardText","desc","Button","React","Component","LoggedIn","logout","toggleProfile","updateUsername","startEdit","setUserProfile","handleChange","getUserInfo","getUserEmail","finishEdit","toggleAddGuild","addGuildToDB","toggleRegionSelect","toggleFactionSelect","setRegionEU","setRegionNA","setFactionA","setFactionH","checkData","ucFirst","profileModal","addGuildModal","editDisabled","profileUsername","profileEmail","profileDiscord","profileUid","guildName","guildNameError","guildRegion","guildRegionError","guildServer","guildServerError","guildDesc","guildDescError","guildFaction","guildFactionError","factionColor","regionSelect","factionSelect","userHasGuild","signOut","value","e","defineProperty","target","name","s","charAt","toUpperCase","slice","prevState","successfulGuildLog","length","userUid","currentUser","uid","email","firestore","collection","doc","get","then","exists","data","JSON","stringify","parse","username","console","log","_this3","discord","catch","err","set","_this4","toLowerCase","_this5","NavItem","NavLink","href","onClick","Modal","isOpen","toggle","ModalBody","Form","FormGroup","Label","color","for","Input","type","onChange","disabled","FormText","UncontrolledDropdown","nav","inNavbar","DropdownToggle","caret","DropdownMenu","right","DropdownItem","Badge","placeholder","InputGroup","InputGroupButtonDropdown","addonType","divider","LoggedOut","login","signup","toggleLoginModal","toggleRegisterModal","loginModal","registerModal","password","signInWithEmailAndPassword","u","error","createUserWithEmailAndPassword","Directory","toggleNav","authListener","Navbar","dark","expand","sticky","NavbarToggler","Collapse","navbar","Nav","components_LoggedIn","components_LoggedOut","App","getUserUID","guildInfo","querySnapshot","docs","map","alliance","horde","Row","components_Guilds","key","components_Directory","Boolean","window","location","hostname","match","ReactDOM","render","src_components_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.f307721a.chunk.js","sourcesContent":["import firebase from 'firebase'\r\n\r\nconst config = {\r\n\tapiKey: \"AIzaSyCfRNMojIm31NBzNqvRpyrtgXBV4l3NpLM\",\r\n\tauthDomain: \"guild-recruit.firebaseapp.com\",\r\n\tdatabaseURL: \"https://guild-recruit.firebaseio.com\",\r\n\tprojectId: \"guild-recruit\",\r\n\tstorageBucket: \"guild-recruit.appspot.com\",\r\n\tmessagingSenderId: \"39854529631\",\r\n\tappId: \"1:39854529631:web:84a8510aaaa11a1f\"\r\n};\r\nfirebase.initializeApp(config);\r\nfirebase.database()\r\n\r\nexport default firebase","import React from 'react'\r\nimport Fire from './Fire'\r\nimport {\r\n  Card,\r\n  CardText,\r\n  CardBody,\r\n  CardTitle,\r\n  CardSubtitle,\r\n  Button,\r\n  Col } from 'reactstrap'\r\n\r\nclass Guilds extends React.Component {\r\n  constructor(props) {\r\n    super(props)\r\n\r\n    this.checkUserLoggedIn = this.checkUserLoggedIn.bind(this)\r\n\r\n    this.state = {\r\n      userLoggedIn: false\r\n    }\r\n  }\r\n\r\n  componentWillMount() {\r\n    this.checkUserLoggedIn()\r\n  }\r\n\r\n  checkUserLoggedIn() {\r\n    Fire.auth().onAuthStateChanged( user => {\r\n      if(user) {\r\n        this.setState({ userLoggedIn: true })\r\n      } else {\r\n        this.setState({ userLoggedIn: false })\r\n      }\r\n    })\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Col sm=\"4\">\r\n        <Card body inverse className=\"the-boxes\" style={{ backgroundColor: '#333', borderColor: '#FFF' }}>\r\n          <CardBody className=\"guild-box\">\r\n            <CardTitle className={this.props.faction}>{this.props.guildname}</CardTitle>\r\n            <CardSubtitle className=\"text-muted\">{this.props.server}</CardSubtitle>\r\n            <hr className=\"hr-divider\" />\r\n            <CardText>{this.props.desc}</CardText>\r\n            {this.state.userLoggedIn\r\n            ? [<Button>Apply</Button>,<Button className=\"btn-spacing\">Contact</Button>]\r\n            : \" \" }\r\n          </CardBody>\r\n        </Card>\r\n      </Col>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Guilds\r\n","import React from 'react'\r\nimport Fire from './Fire'\r\nimport {\r\n  Badge,\r\n  Button,\r\n  DropdownToggle,\r\n  DropdownMenu,\r\n  DropdownItem,\r\n  Form,\r\n  FormGroup,\r\n  FormText,\r\n  Input,\r\n  InputGroup,\r\n  InputGroupButtonDropdown,\r\n  Label,\r\n  Modal,\r\n  ModalBody,\r\n  NavLink,\r\n  NavItem,\r\n  UncontrolledDropdown\r\n} from 'reactstrap'\r\n\r\nclass LoggedIn extends React.Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.logout = this.logout.bind(this)\r\n    this.toggleProfile = this.toggleProfile.bind(this)\r\n    this.updateUsername = this.updateUsername.bind(this)\r\n    this.startEdit = this.startEdit.bind(this)\r\n    this.setUserProfile = this.setUserProfile.bind(this)\r\n    this.handleChange = this.handleChange.bind(this)\r\n    this.getUserInfo = this.getUserInfo.bind(this)\r\n    this.getUserEmail = this.getUserEmail.bind(this)\r\n    this.finishEdit = this.finishEdit.bind(this)\r\n    this.toggleAddGuild = this.toggleAddGuild.bind(this)\r\n    this.addGuildToDB = this.addGuildToDB.bind(this)\r\n    this.toggleRegionSelect = this.toggleRegionSelect.bind(this)\r\n    this.toggleFactionSelect = this.toggleFactionSelect.bind(this)\r\n    this.setRegionEU = this.setRegionEU.bind(this)\r\n    this.setRegionNA = this.setRegionNA.bind(this)\r\n    this.setFactionA = this.setFactionA.bind(this)\r\n    this.setFactionH = this.setFactionH.bind(this)\r\n    this.checkData = this.checkData.bind(this)\r\n    this.ucFirst = this.ucFirst.bind(this)\r\n\r\n    this.state = {\r\n      profileModal: false,\r\n      addGuildModal: false,\r\n      editDisabled: true,\r\n      profileUsername: '',\r\n      profileEmail: '',\r\n      profileDiscord: '',\r\n      profileUid: '',\r\n      guildName: '',\r\n      guildNameError: '',\r\n      guildRegion: '',\r\n      guildRegionError: '',\r\n      guildServer: '',\r\n      guildServerError: '',\r\n      guildDesc: '',\r\n      guildDescError: '',\r\n      guildFaction: '',\r\n      guildFactionError: '',\r\n      factionColor: 'secondary',\r\n      regionSelect: false,\r\n      factionSelect: false,\r\n      userHasGuild: false\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.getUserEmail()\r\n  }\r\n\r\n  logout() {\r\n    Fire.auth().signOut();\r\n  }\r\n  \r\n  startEdit() {\r\n    this.setState({ editDisabled: false })\r\n  }\r\n\r\n  finishEdit() {\r\n    this.setState({ editDisabled: true })\r\n  }\r\n\r\n  updateUsername(value) {\r\n    this.setState({ profileUsername: value })\r\n  }\r\n\r\n  handleChange(e) {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  }\r\n\r\n  ucFirst(s) {\r\n    if (typeof s !== 'string') return ''\r\n    return s.charAt(0).toUpperCase() + s.slice(1);\r\n  }\r\n\r\n  setRegionEU() {\r\n    this.setState({ guildRegion: 'EU'})\r\n  }\r\n\r\n  setRegionNA() {\r\n    this.setState({ guildRegion: 'NA' })\r\n  }\r\n\r\n  setFactionA() {\r\n    this.setState({ guildFaction: 'Alliance' })\r\n    this.setState({ factionColor: 'primary' })\r\n  }\r\n\r\n  setFactionH() {\r\n    this.setState({ guildFaction: 'Horde' })\r\n    this.setState({ factionColor: 'danger' })\r\n  }\r\n\r\n  toggleProfile() {\r\n    this.setState(prevState => ({\r\n      profileModal: !prevState.profileModal\r\n    }))\r\n  }\r\n\r\n  toggleAddGuild() {\r\n    this.setState(prevState => ({\r\n      addGuildModal: !prevState.addGuildModal\r\n    }))\r\n  }\r\n\r\n  toggleRegionSelect() {\r\n     this.setState(prevState => ({\r\n      regionSelect: !prevState.regionSelect\r\n    }))\r\n  }\r\n\r\n  toggleFactionSelect() {\r\n    this.setState(prevState => ({\r\n      factionSelect: !prevState.factionSelect\r\n    }))\r\n  }\r\n\r\n  checkData() {\r\n    this.setState({\r\n      guildDescError: '',\r\n      guildNameError: '',\r\n      guildRegionError: '',\r\n      guildServerError: '',\r\n      guildFactionError: '',\r\n      successfulGuildLog: false\r\n    })\r\n\r\n    if (!this.state.guildName) {\r\n      this.setState({ guildNameError: 'Guild Name is empty!'})\r\n    } else if(!this.state.guildRegion) {\r\n      this.setState({ guildRegionError: 'Region isn\\'t chosen!'})\r\n    } else if(!this.state.guildFaction) {\r\n      this.setState({ guildFactionError: 'Faction isn\\'t chosen!'})\r\n    } else if(!this.state.guildServer) {\r\n      this.setState({ guildServerError: 'Server is blank!' })\r\n    } else if(!this.state.guildDesc) {\r\n      this.setState({ guildDescError: 'Description is blank!' })\r\n    } else if (this.state.guildName.length < 3 || this.state.guildName.length > 24) {\r\n      this.setState({ guildNameError: 'Error in Guild Name length!'})\r\n    } else if(this.state.guildDesc.length > 140) {\r\n      this.setState({ guildDescError: 'Description is too long!'})\r\n    } else if(this.state.guildDesc.length < 10) {\r\n      this.setState({ guildDescError: 'Description is too short!'})\r\n    } else {\r\n      this.addGuildToDB()\r\n    }\r\n  }\r\n\r\n  getUserEmail() {\r\n    Fire.auth().onAuthStateChanged( user => {\r\n      if(user) {\r\n        const userUid = Fire.auth().currentUser.uid\r\n        this.setState({ profileEmail: user.email })\r\n        this.setState({ profileUid: userUid})\r\n        Fire.firestore().collection('users').doc(this.state.profileUid).get().then(doc => {\r\n          if(doc.exists) {\r\n            var data = JSON.stringify(doc.data())\r\n            var user = JSON.parse(data)\r\n            this.setState({ profileUsername: user.username })\r\n          }\r\n        })\r\n        Fire.firestore().collection('guilds').doc(this.state.profileUid).get().then(doc => {\r\n          if(doc.exists) {\r\n            this.setState({ userHasGuild: true })\r\n          } else (\r\n            console.log(\"No guild exists for this user!\")\r\n          )\r\n        })\r\n      } else if (!user) {\r\n        console.log(\"No user!\")\r\n      }\r\n    })\r\n  }\r\n\r\n  getUserInfo() {\r\n    const playerInfo = Fire.firestore().collection('users').doc(this.state.profileUid)\r\n    playerInfo.get().then(doc => {\r\n      if(doc.exists) {\r\n        var data = JSON.stringify(doc.data())\r\n        var user = JSON.parse(data)\r\n        this.setState({ profileUsername: user.username })\r\n        this.setState({ profileDiscord: user.discord })\r\n      } else {\r\n        console.log(\"No such document\")\r\n      }\r\n    }).catch((err) => {\r\n      console.log(\"Error getting document from DB: \", err)\r\n    })\r\n  }\r\n\r\n  setUserProfile() {\r\n    Fire.firestore().collection('users').doc(this.state.profileUid).set({\r\n      username: this.state.profileUsername,\r\n      discord: this.state.profileDiscord,\r\n      email: this.state.profileEmail\r\n    }).then(() => {\r\n      console.log(\"Written to Firestore\")\r\n    }).catch(err => {\r\n      console.log(\"Error writing to DB: \", err)\r\n    })\r\n  }\r\n\r\n  addGuildToDB() {\r\n    Fire.firestore().collection('guilds').doc(this.state.profileUid)\r\n    .set({\r\n      guildName: this.state.guildName,\r\n      guildRegion: this.state.guildRegion,\r\n      guildServer: this.ucFirst(this.state.guildServer),\r\n      guildDesc: this.state.guildDesc,\r\n      guildFaction: this.state.guildFaction.toLowerCase()\r\n    }).then(() => {\r\n      console.log(\"Successfully written to Firestore\")\r\n      this.toggleAddGuild()\r\n      this.setState({ userHasGuild: true })\r\n    }).catch(err => {\r\n      console.log(\"Error writing to DB: \", err)\r\n    })\r\n  }\r\n\r\n  render() {\r\n    return ([\r\n      <NavItem>\r\n        <NavLink href=\"#\" onClick={() => {this.toggleProfile(); this.getUserInfo()}}> {this.state.profileUsername ? this.state.profileUsername : \"Loading..\"} </NavLink>\r\n        <Modal isOpen={this.state.profileModal} toggle={this.toggleProfile}>\r\n          <ModalBody>\r\n            <Form>\r\n              <FormGroup>\r\n                <Label style={{ color: '#000' }} for=\"username\">Username</Label>\r\n                <Input type=\"username\" name=\"profileUsername\" value={this.state.profileUsername} onChange={this.handleChange} disabled={this.state.editDisabled} />\r\n              </FormGroup>\r\n              <FormGroup>\r\n                <Label style={{ color: '#000' }} for=\"email\">Email</Label>\r\n                <Input type=\"email\" name=\"email\" value={this.state.profileEmail} disabled />\r\n              </FormGroup>\r\n              <FormGroup>\r\n                <Label style={{ color: '#000' }} for=\"discord\">Discord</Label>\r\n                <Input type=\"text\" name=\"profileDiscord\" value={this.state.profileDiscord} onChange={this.handleChange} disabled={this.state.editDisabled} />\r\n                <FormText color=\"muted\">\r\n                  Example: chelk#4281\r\n                </FormText>\r\n              </FormGroup>\r\n              <Button className=\"btn-float-r btn-spacing\" color=\"secondary\" onClick={this.toggleProfile}>Close</Button>\r\n              <Button className=\"btn-float-r btn-spacing\" color=\"info\" onClick={this.startEdit}>Edit</Button>\r\n              <Button className=\"btn-float-r\" color=\"success\" onClick={() => {this.toggleProfile(); this.setUserProfile(); this.finishEdit();}}>Update</Button>\r\n            </Form>\r\n          </ModalBody>\r\n        </Modal>\r\n      </NavItem>,\r\n      <UncontrolledDropdown nav inNavbar>\r\n        <DropdownToggle nav caret>\r\n          Options\r\n        </DropdownToggle>\r\n        <DropdownMenu right>\r\n          {this.state.userHasGuild \r\n          ? <DropdownItem> Manage Guild </DropdownItem>\r\n          : <DropdownItem onClick={this.toggleAddGuild}>Add Guild</DropdownItem>}\r\n          <Modal isOpen={this.state.addGuildModal} toggle={this.toggleAddGuild}>\r\n            <ModalBody>\r\n            <Form>\r\n              <FormGroup>\r\n                <Badge color=\"danger\" className=\"badge-spacing visible\">{this.state.guildNameError}</Badge>\r\n                <Input type=\"text\" name=\"guildName\" value={this.state.guildName} onChange={this.handleChange} placeholder=\"Guild Name\" />\r\n              </FormGroup>\r\n              <FormGroup>\r\n                <Badge color=\"danger\" className=\"badge-spacing visible\">{this.state.guildFactionError}{this.state.guildRegionError}{this.state.guildServerError}</Badge>\r\n                <InputGroup>\r\n                  <InputGroupButtonDropdown addonType=\"append\" isOpen={this.state.factionSelect} toggle={this.toggleFactionSelect}>\r\n                    <DropdownToggle color={this.state.factionColor}>\r\n                      {this.state.guildFaction ? this.state.guildFaction : \"Faction\"}\r\n                    </DropdownToggle>\r\n                    <DropdownMenu>\r\n                      <DropdownItem onClick={this.setFactionA}>Alliance</DropdownItem>\r\n                      <DropdownItem onClick={this.setFactionH}>Horde</DropdownItem>\r\n                    </DropdownMenu>\r\n                  </InputGroupButtonDropdown>\r\n                  <InputGroupButtonDropdown addonType=\"append\" isOpen={this.state.regionSelect} toggle={this.toggleRegionSelect}>\r\n                    <DropdownToggle>\r\n                      {this.state.guildRegion ? this.state.guildRegion : \"Region\"}\r\n                    </DropdownToggle>\r\n                    <DropdownMenu>\r\n                      <DropdownItem onClick={this.setRegionEU}>EU</DropdownItem>\r\n                      <DropdownItem onClick={this.setRegionNA}>NA</DropdownItem>\r\n                    </DropdownMenu>\r\n                  </InputGroupButtonDropdown>\r\n                  <Input type=\"text\" name=\"guildServer\" value={this.state.guildServer} onChange={this.handleChange} placeholder=\"Server Name\" />\r\n                </InputGroup>\r\n              </FormGroup>\r\n              <FormGroup>\r\n                <Badge color=\"danger\" className=\"badge-spacing visible\">{this.state.guildDescError}</Badge>\r\n                <Input type=\"text\" name=\"guildDesc\" value={this.state.guildDesc} onChange={this.handleChange} placeholder=\"Description\" />\r\n                <FormText color={this.state.guildDesc.length > 140 ? \"danger\" : \"muted\"}>\r\n                  Character count: {this.state.guildDesc.length} / 140\r\n                </FormText>\r\n              </FormGroup>\r\n              <Button className=\"btn-float-r btn-spacing\" color=\"secondary\" onClick={this.toggleAddGuild}>Close</Button>\r\n              <Button className=\"btn-float-r\" color=\"success\" onClick={() => {if (this.state.successfulGuildLog) { this.checkData() } else { this.checkData(); }}}>Add</Button>\r\n            </Form>\r\n            </ModalBody>\r\n          </Modal>\r\n          {this.state.userHasGuild \r\n          ? <DropdownItem> Show Applicants</DropdownItem>\r\n          : <DropdownItem> Show Applications</DropdownItem>}\r\n          <DropdownItem divider />\r\n          <DropdownItem onClick={this.logout}>\r\n            Log Out\r\n          </DropdownItem>\r\n        </DropdownMenu>\r\n      </UncontrolledDropdown>]\r\n    )\r\n  }\r\n}\r\n\r\nexport default LoggedIn","import React from 'react'\r\nimport Fire from './Fire'\r\nimport {\r\n  NavItem,\r\n  NavLink,\r\n  Button,\r\n  Modal,\r\n  ModalBody,\r\n  Input,\r\n  FormGroup,\r\n  FormText,\r\n  Form } from 'reactstrap';\r\n\r\n\r\nclass LoggedOut extends React.Component {\r\n  constructor(props) {\r\n    super(props)\r\n\r\n    this.login = this.login.bind(this)\r\n    this.signup = this.signup.bind(this)\r\n    this.handleChange = this.handleChange.bind(this)\r\n    this.toggleLoginModal = this.toggleLoginModal.bind(this)\r\n    this.toggleRegisterModal = this.toggleRegisterModal.bind(this)\r\n\r\n    this.state = {\r\n      loginModal: false,\r\n      registerModal: false,\r\n      username: '',\r\n      discord: '',\r\n      email: '',\r\n      password: '',\r\n      uid: ''\r\n    }\r\n  }\r\n\r\n  login(e) {\r\n    Fire.auth().signInWithEmailAndPassword(this.state.email, this.state.password)\r\n      .then((u) => {}).catch((error) => {\r\n        console.log(error);\r\n      })\r\n  }\r\n\r\n  signup(e) {\r\n    Fire.auth().createUserWithEmailAndPassword(this.state.email, this.state.password)\r\n      .then(() => {\r\n        const userUid = Fire.auth().currentUser.uid\r\n        this.setState({ uid: userUid })\r\n        Fire.firestore().collection('users').doc(this.state.uid).set({\r\n          username: this.state.username,\r\n          discord: this.state.discord,\r\n          email: this.state.email\r\n        }).then(() => {\r\n          console.log(\"Document successfully written\")\r\n        }).catch((error) => {\r\n          console.log(error);\r\n        })\r\n      })\r\n  }\r\n\r\n  handleChange(e) {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  }\r\n\r\n  toggleLoginModal() {\r\n    this.setState(prevState => ({\r\n      loginModal: !prevState.loginModal\r\n    }))\r\n  }\r\n\r\n  toggleRegisterModal() {\r\n    this.setState(prevState => ({\r\n      registerModal: !prevState.registerModal\r\n    }))\r\n  }\r\n\r\n  render() {\r\n    return([\r\n      <NavItem>\r\n        <NavLink href=\"#\" onClick={this.toggleRegisterModal}> Register </NavLink>\r\n        <Modal isOpen={this.state.registerModal} toggle={this.toggleRegisterModal}>\r\n          <ModalBody>\r\n            <Form>\r\n              <FormGroup>\r\n                <Input type=\"email\" name=\"email\" value={this.state.email} onChange={this.handleChange} placeholder=\"Email\" />\r\n              </FormGroup>\r\n              <FormGroup>\r\n                <Input type=\"password\" name=\"password\" value={this.state.password} onChange={this.handleChange} placeholder=\"Password\" />\r\n              </FormGroup>\r\n              <FormGroup>\r\n                <Input type=\"username\" name=\"username\" value={this.state.username} onChange={this.handleChange} placeholder=\"Username\" />\r\n              </FormGroup>\r\n              <FormGroup>\r\n                <Input type=\"text\" name=\"discord\" value={this.state.discord} onChange={this.handleChange} placeholder=\"Discord\" />\r\n                <FormText color=\"muted\">\r\n                  Example: chelk#4281\r\n                </FormText>\r\n              </FormGroup>\r\n            </Form>\r\n            <Button className=\"btn-float-r btn-spacing\" color=\"danger\" onClick={this.toggleRegisterModal}>Close</Button>\r\n            <Button className=\"btn-float-r\" color=\"success\" onClick={() => {\r\n              this.signup();\r\n              this.toggleRegisterModal();\r\n            }}> Register </Button>\r\n          </ModalBody>\r\n        </Modal>\r\n      </NavItem>,\r\n      <NavItem>\r\n        <NavLink href=\"#\" onClick={this.toggleLoginModal}> Login </NavLink>\r\n        <Modal isOpen={this.state.loginModal} toggle={this.toggleLoginModal}>\r\n        <ModalBody>\r\n          <Form>\r\n            <FormGroup>\r\n              <Input type=\"email\" name=\"email\" value={this.state.email} onChange={this.handleChange} placeholder=\"Email\" />\r\n            </FormGroup>\r\n            <FormGroup>\r\n              <Input type=\"password\" name=\"password\" value={this.state.password} onChange={this.handleChange} placeholder=\"Password\" />\r\n            </FormGroup>\r\n          </Form>\r\n          <Button className=\"btn-float-r btn-spacing\" color=\"danger\" onClick={this.toggleLoginModal}>Close</Button>\r\n          <Button className=\"btn-float-r\" color=\"success\" onClick={() => {\r\n              this.login();\r\n              this.toggleRegisterModal();\r\n            }}> Log in </Button>\r\n          <p className=\"error-message\" color=\"danger\">{this.props.error}</p>\r\n        </ModalBody>\r\n        </Modal>\r\n      </NavItem>\r\n      ]\r\n    )\r\n  }\r\n}\r\n\r\nexport default LoggedOut","import React from 'react'\r\nimport Fire from './Fire'\r\nimport LoggedIn from './LoggedIn'\r\nimport LoggedOut from './LoggedOut'\r\nimport {\r\n  Collapse,\r\n  Navbar,\r\n  NavbarToggler,\r\n  Nav\r\n } from 'reactstrap';\r\n\r\nclass Directory extends React.Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.toggleNav = this.toggleNav.bind(this)\r\n    this.authListener = this.authListener.bind(this)\r\n    this.state = {\r\n      isOpen: false,\r\n      user: {}\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.authListener()\r\n  }\r\n\r\n  toggleNav() {\r\n    this.setState({\r\n      isOpen: !this.state.isOpen\r\n    })\r\n  }\r\n\r\n  authListener() {\r\n    Fire.auth().onAuthStateChanged((user) => {\r\n      if (user) {\r\n        this.setState({ user })\r\n      } else {\r\n        this.setState({ user: null })\r\n      }\r\n  })}\r\n\r\n  render() {\r\n    return (\r\n      <Navbar className=\"main-nav\" color=\"dark\" dark expand=\"md\" sticky=\"top\">\r\n        <NavbarToggler onClick={this.toggleNav} />\r\n        <Collapse isOpen={this.state.isOpen} navbar>\r\n          <Nav className=\"ml-auto\" navbar>\r\n          {this.state.user\r\n          ?  <LoggedIn />\r\n          :  <LoggedOut />}\r\n          </Nav>\r\n        </Collapse>\r\n      </Navbar>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Directory\r\n","import React from 'react'\nimport Guilds from './Guilds'\nimport Directory from './Directory'\nimport Fire from './Fire'\nimport { Row } from 'reactstrap'\nimport './App.css'\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props)\n    this.getUserUID = this.getUserUID.bind(this)\n    this.guildInfo = this.guildInfo.bind(this)\n\n    this.state = {\n      profileUid: ''\n    }\n  }\n\n  componentWillMount() {\n    this.getUserUID()\n  }\n\n  getUserUID() {\n    Fire.auth().onAuthStateChanged( user => {\n      if(user) {\n        const userUid = Fire.auth().currentUser.uid\n        this.setState({ profileUid: userUid})  \n      }\n    })\n  }\n\n  guildInfo() {\n    Fire.firestore().collection('guilds')\n      .get().then(querySnapshot => {\n        const data = querySnapshot.docs.map(doc => doc.data())\n        console.log(data)\n      })\n  }\n\n  render() {\n    const alliance = 'guild-name -alliance'\n    const horde = 'guild-name -horde'\n    return(\n      <div className=\"main-div\">\n        <Row>\n          <Guilds key={4} guildname=\"HelloP\" faction={alliance} server=\"US-Sargeras\" desc=\"This is a test description to tell you a little about our hardcore progressive raiding guild!\" />\n          <Guilds key={5} guildname=\"WorldQ\" faction={horde} server=\"US-Aerie Peak\" desc=\"This is a test description to tell you a little about our hardcore progressive raiding guild!\" />\n          <Guilds key={6} guildname=\"Test\" faction={alliance} server=\"EU-Ravenholdt\" desc=\"This is a test description to tell you a little about our hardcore progressive raiding guild!\" />\n        </Row>\n        <Directory />\n        <Row>\n          <Guilds key={1} guildname=\"HelloP\" faction={alliance} server=\"US-Sargeras\" desc=\"This is a test description to tell you a little about our hardcore progressive raiding guild!\" />\n          <Guilds key={2} guildname=\"WorldQ\" faction={horde} server=\"US-Aerie Peak\" desc=\"This is a test description to tell you a little about our hardcore progressive raiding guild!\" />\n          <Guilds key={3} guildname=\"Test\" faction={alliance} server=\"EU-Ravenholdt\" desc=\"This is a test description to tell you a little about our hardcore progressive raiding guild!\" />\n        </Row>\n        <Row>\n          <Guilds key={7} guildname=\"HelloP\" faction={alliance} server=\"US-Sargeras\" desc=\"This is a test description to tell you a little about our hardcore progressive raiding guild!\" />\n          <Guilds key={8} guildname=\"WorldQ\" faction={horde} server=\"US-Aerie Peak\" desc=\"This is a test description to tell you a little about our hardcore progressive raiding guild!\" />\n          <Guilds key={9} guildname=\"Test\" faction={alliance} server=\"EU-Ravenholdt\" desc=\"This is a test description to tell you a little about our hardcore progressive raiding guild!\" />\n        </Row>\n        <Row>\n          <Guilds key={10} guildname=\"HelloP\" faction={alliance} server=\"US-Sargeras\" desc=\"This is a test description to tell you a little about our hardcore progressive raiding guild!\" />\n          <Guilds key={11} guildname=\"WorldQ\" faction={horde} server=\"US-Aerie Peak\" desc=\"This is a test description to tell you a little about our hardcore progressive raiding guild!\" />\n          <Guilds key={12} guildname=\"Test\" faction={alliance} server=\"EU-Ravenholdt\" desc=\"This is a test description to tell you a little about our hardcore progressive raiding guild!\" />\n        </Row>\n        <Row>\n          <Guilds key={13} guildname=\"HelloP\" faction={alliance} server=\"US-Sargeras\" desc=\"This is a test description to tell you a little about our hardcore progressive raiding guild!\" />\n          <Guilds key={14} guildname=\"WorldQ\" faction={horde} server=\"US-Aerie Peak\" desc=\"This is a test description to tell you a little about our hardcore progressive raiding guild!\" />\n          <Guilds key={15} guildname=\"Test\" faction={alliance} server=\"EU-Ravenholdt\" desc=\"This is a test description to tell you a little about our hardcore progressive raiding guild!\" />\n        </Row>\n        <Row>\n          <Guilds key={16} guildname=\"HelloP\" faction={alliance} server=\"US-Sargeras\" desc=\"This is a test description to tell you a little about our hardcore progressive raiding guild!\" />\n          <Guilds key={17} guildname=\"WorldQ\" faction={horde} server=\"US-Aerie Peak\" desc=\"This is a test description to tell you a little about our hardcore progressive raiding guild!\" />\n          <Guilds key={18} guildname=\"Test\" faction={alliance} server=\"EU-Ravenholdt\" desc=\"This is a test description to tell you a little about our hardcore progressive raiding guild!\" />\n        </Row>\n    </div>\n    )\n  }\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}