{"version":3,"sources":["components/Fire.js","components/PublicProfileModal.js","components/GuildCard.js","components/ProfileModal.js","components/ManageGuildModal.js","components/AddGuildModal.js","components/LoggedIn.js","components/RegisterModal.js","components/LoginModal.js","components/LoggedOut.js","components/Directory.js","components/App.js","serviceWorker.js","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","database","PublicProfileModal","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","sendData","bind","assertThisInitialized","state","callback","react_default","a","createElement","Modal","isOpen","isShow","toggle","togglePublicProfile","ModalBody","Form","FormGroup","Label","style","color","for","Input","type","name","value","playerUsername","disabled","playerGuild","playerDiscord","Button","className","onClick","React","Component","GuildCard","getUserInfo","applyUserToGuild","closePublicProfileModal","userLoggedIn","publicProfileModal","playerUid","didPlayerApply","buttonDisabled","_this2","Fire","auth","onAuthStateChanged","user","setState","currentUser","uid","console","log","firestore","collection","where","get","then","snapshot","forEach","doc","id","data","catch","err","_this3","adminUid","applicantUid","path","exists","update","applicants","FieldValue","arrayUnion","prevState","_this4","Col","sm","Card","body","inverse","backgroundColor","borderColor","CardBody","CardTitle","guildFaction","guildName","CardSubtitle","guildRegion","guildServer","href","gmStyle","guildMaster","components_PublicProfileModal","key","CardText","guildDesc","ProfileModal","getUser","handleChange","setEditDisabled","editDisabled","profileUsername","profileEmail","profileDiscord","profileUid","e","defineProperty","target","set","username","discord","email","userUid","JSON","stringify","parse","onChange","FormText","setUserProfile","ManageGuildModal","defaultValue","InputGroup","InputGroupAddon","addonType","InputGroupText","AddGuildModal","closeModal","ucFirst","toggleFactionSelect","toggleRegionSelect","toggleServerSelect","setRegionEU","setRegionUS","setFactionA","setFactionH","getServers","checkGuildData","addGuildToDB","guildNameError","guildRegionError","guildServerError","guildDescError","guildFactionError","factionColor","regionSelect","factionSelect","serverSelect","s","charAt","toUpperCase","slice","servers","serverList","serverArray","map","lists","push","clickedKey","serverName","server","length","window","location","reload","isModalShow","Badge","placeholder","InputGroupButtonDropdown","DropdownToggle","DropdownMenu","DropdownItem","serverDetail","LoggedIn","logout","toggleProfile","updateUsername","deleteUserProfile","deleteUserGuild","getUserEmail","toggleAddGuild","toggleManageGuild","toggleDeleteProfileModal","toggleDeleteGuildModal","getGuildInfo","closeProfileModal","closeManageGuildModal","closeAddGuildModal","profileModal","addGuildModal","manageGuildModal","deleteGuildModal","deleteProfileModal","userHasGuild","signOut","guild","delete","NavItem","NavLink","components_ProfileModal","UncontrolledDropdown","nav","inNavbar","caret","right","components_ManageGuildModal","components_AddGuildModal","isRegionOpen","isFactionOpen","ModalFooter","divider","RegisterModal","checkPlayerData","password","usernameError","discordError","emailError","passwordError","createUserWithEmailAndPassword","res","error","code","signup","toggleRegisterModal","LoginModal","login","signInWithEmailAndPassword","u","LoggedOut","toggleLoginModal","closeRegisterModal","closeLoginModal","loginModal","registerModal","components_RegisterModal","components_LoginModal","Directory","toggleNav","authListener","renderLoginOptions","components_LoggedIn","components_LoggedOut","Navbar","dark","expand","sticky","NavbarToggler","Collapse","navbar","Nav","App","getUserUID","guildInfo","renderCards","guilds","gmGuildFaction","guildComp","components_GuildCard","CardDeck","components_Directory","Boolean","hostname","match","ReactDOM","render","src_components_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.028076f3.chunk.js","sourcesContent":["import firebase from 'firebase'\r\n\r\n/* \r\nIt's fine to expose this stuff, but make sure you have security rules setup server-side in Firebase. \r\nOtherwise, anyone can whatever they want to your DB.\r\n\r\nRead this craptastic article -- the 2 steps outlined are what you should do\r\nhttps://medium.com/@impaachu/how-to-secure-your-firebase-project-even-when-your-api-key-is-publicly-available-a462a2a58843 \r\nhttps://firebase.google.com/docs/reference/security/database/\r\n*/\r\n\r\nconst config = {\r\n\tapiKey: \"AIzaSyCfRNMojIm31NBzNqvRpyrtgXBV4l3NpLM\",\r\n\tauthDomain: \"guild-recruit.firebaseapp.com\",\r\n\tdatabaseURL: \"https://guild-recruit.firebaseio.com\",\r\n\tprojectId: \"guild-recruit\",\r\n\tstorageBucket: \"guild-recruit.appspot.com\",\r\n\tmessagingSenderId: \"39854529631\",\r\n\tappId: \"1:39854529631:web:84a8510aaaa11a1f\"\r\n};\r\nfirebase.initializeApp(config);\r\nfirebase.database()\r\n\r\nexport default firebase","import React from 'react'\r\nimport {\r\n  Modal,\r\n  ModalBody,\r\n  Form,\r\n  FormGroup,\r\n  Label,\r\n  Input,\r\n  Button } from 'reactstrap'\r\n\r\nclass PublicProfileModal extends React.Component {\r\n  constructor(props) {\r\n    super(props)\r\n\r\n    this.sendData = this.sendData.bind(this)\r\n\r\n    this.state = {\r\n\r\n    }\r\n  }\r\n\r\n  sendData() {\r\n    this.props.callback(false)\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      // values have to be filled with guild master\r\n      <Modal isOpen={this.props.isShow} toggle={this.togglePublicProfile}>\r\n        <ModalBody>\r\n          <Form>\r\n            <FormGroup>\r\n                <Label style={{ color: '#000' }} for=\"username\">Username</Label>\r\n                <Input type=\"username\" name=\"playerUsername\" value={this.state.playerUsername} disabled/>\r\n            </FormGroup>\r\n            <FormGroup>\r\n              <Label style={{ color: '#000' }} for=\"email\">Guild</Label>\r\n              <Input type=\"text\" name=\"guild\" value={this.state.playerGuild} disabled />\r\n            </FormGroup>\r\n            <FormGroup>\r\n              <Label style={{ color: '#000' }} for=\"discord\">Discord</Label>\r\n              <Input type=\"text\" name=\"playerDiscord\" value={this.state.playerDiscord} disabled/>\r\n            </FormGroup>\r\n            <Button className=\"btn-float-r btn-spacing\" color=\"secondary\" onClick={this.sendData}>Close</Button>\r\n          </Form>\r\n        </ModalBody>\r\n      </Modal>\r\n    )\r\n  }\r\n}\r\n\r\nexport default PublicProfileModal","import React from 'react'\r\nimport Fire from './Fire'\r\nimport PublicProfileModal from './PublicProfileModal'\r\nimport {\r\n  Card,\r\n  CardText,\r\n  CardBody,\r\n  CardTitle,\r\n  CardSubtitle,\r\n  Button,\r\n  Col } from 'reactstrap'\r\n\r\nclass GuildCard extends React.Component {\r\n  constructor(props) {\r\n    super(props)\r\n\r\n    this.getUserInfo = this.getUserInfo.bind(this)\r\n    this.applyUserToGuild = this.applyUserToGuild.bind(this)\r\n    this.togglePublicProfile = this.togglePublicProfile.bind(this)\r\n    this.closePublicProfileModal = this.closePublicProfileModal.bind(this)\r\n\r\n    this.state = {\r\n      userLoggedIn: false,\r\n      publicProfileModal: false,\r\n      playerUid: '',\r\n      didPlayerApply: 'Apply',\r\n      buttonDisabled: false\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.getUserInfo()\r\n  }\r\n\r\n  getUserInfo() {\r\n    // get user login status\r\n\r\n    // set user login, ON LOGIN\r\n    Fire.auth().onAuthStateChanged( user => {\r\n      if(user) {\r\n        this.setState({ \r\n          userLoggedIn: true,\r\n          playerUid: Fire.auth().currentUser.uid\r\n         })\r\n      } else {\r\n        this.setState({ userLoggedIn: false })\r\n      }\r\n    })\r\n\r\n    console.log(this.state.userLoggedIn)\r\n    \r\n    // check for guilds applied to\r\n    var path = Fire.firestore().collection('guilds')\r\n    var query = path.where(\"applicants\", \"array-contains\", this.state.playerUid)\r\n    \r\n    query.get().then(snapshot => {\r\n      snapshot.forEach(doc => {\r\n        console.log(doc.id, \"=>\", doc.data());\r\n      })\r\n    }).catch(err => {\r\n      console.log(\"Error fetching: \", err)\r\n    })\r\n  }\r\n\r\n  applyUserToGuild() {\r\n    var adminUid = this.props.id\r\n    var applicantUid = this.state.playerUid\r\n    var path = Fire.firestore().collection('guilds').doc(adminUid)\r\n    \r\n    path.get().then(doc => {\r\n        if(doc.exists) {\r\n          path.update({ applicants: Fire.firestore.FieldValue.arrayUnion(applicantUid) })\r\n            .then(() => {\r\n              // at this point they've applied\r\n              this.setState({ \r\n                didPlayerApply: 'Applied',\r\n                buttonDisabled: true,\r\n               })\r\n            });\r\n        } else { console.log(\"No such document!\") }\r\n    })\r\n  }\r\n\r\n  togglePublicProfile() {\r\n    this.setState(prevState => ({\r\n      publicProfileModal: !prevState.publicProfileModal\r\n    }))\r\n  }\r\n\r\n  closePublicProfileModal(data) {\r\n    this.setState({ publicProfileModal: data })\r\n  }\r\n\r\n  render() {\r\n    return (\r\n        <Col sm=\"4\">\r\n          <Card body inverse className=\"the-boxes\" style={{ backgroundColor: '#333', borderColor: '#FFF' }}>\r\n            <CardBody className=\"guild-box\">\r\n              <CardTitle className={this.props.guildFaction}>{this.props.guildName}</CardTitle>\r\n              <CardSubtitle className=\"ras text-muted\">{this.props.guildRegion}</CardSubtitle>\r\n              <CardSubtitle className=\"ras text-muted\">{this.props.guildServer}</CardSubtitle>\r\n              <CardSubtitle className=\"gm-spacing\">\r\n                <span className=\"text-muted\">GM: </span>\r\n                <a id={this.props.id} href=\"#\" onClick={() => {this.togglePublicProfile(); return false;}} className={this.props.gmStyle}>{this.props.guildMaster}</a>\r\n              </CardSubtitle>\r\n              <PublicProfileModal key=\"ppModal\" callback={this.closePublicProfileModal} isShow={this.state.publicProfileModal} />\r\n              <hr className=\"hr-divider\" />\r\n              <CardText>{this.props.guildDesc}</CardText>\r\n              <Button id={this.props.id} onClick={this.applyUserToGuild} disabled={this.state.buttonDisabled}>{this.state.didPlayerApply}</Button>\r\n            </CardBody>\r\n          </Card>\r\n        </Col>\r\n    )\r\n  }\r\n}\r\n\r\nexport default GuildCard\r\n","import React from 'react'\r\nimport Fire from './Fire'\r\nimport {\r\n  Modal,\r\n  ModalBody,\r\n  Form,\r\n  FormGroup,\r\n  Label,\r\n  Input,\r\n  FormText,\r\n  Button } from 'reactstrap'\r\n\r\nclass ProfileModal extends React.Component {\r\n  constructor(props) {\r\n    super(props)\r\n\r\n    this.getUser = this.getUser.bind(this)\r\n    this.sendData = this.sendData.bind(this)\r\n    this.handleChange = this.handleChange.bind(this)\r\n    this.setEditDisabled = this.setEditDisabled.bind(this)\r\n\r\n    this.state = {\r\n      editDisabled: true,\r\n      profileUsername: '',\r\n      profileEmail: '',\r\n      profileDiscord: '',\r\n      profileUid: ''\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.getUser()\r\n  }\r\n\r\n  handleChange(e) {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  }\r\n\r\n  sendData() {\r\n    this.props.callback(false)\r\n  }\r\n\r\n  setEditDisabled() {\r\n    this.setState(prevState => ({\r\n      editDisabled: !prevState.editDisabled\r\n    }))\r\n  }\r\n\r\n  setUserProfile() {\r\n    Fire.firestore().collection('users').doc(this.state.profileUid).set({\r\n      username: this.state.profileUsername,\r\n      discord: this.state.profileDiscord,\r\n      email: this.state.profileEmail\r\n    }).then(() => {\r\n      console.log(\"Written to Firestore\")\r\n    }).catch(err => {\r\n      console.log(\"Error writing to DB: \", err)\r\n    })\r\n  }\r\n\r\n  getUser() {\r\n    Fire.auth().onAuthStateChanged( user => {\r\n      if(user) {\r\n        const userUid = Fire.auth().currentUser.uid\r\n        this.setState({ \r\n          profileEmail: user.email,\r\n          profileUid: userUid \r\n        })\r\n        Fire.firestore().collection('users').doc(this.state.profileUid).get().then(doc => {\r\n          if(doc.exists) {\r\n            var data = JSON.stringify(doc.data())\r\n            var user = JSON.parse(data)\r\n            this.setState({ \r\n              profileUsername: user.username,\r\n              profileDiscord: user.discord\r\n             })\r\n          }\r\n        })\r\n      }\r\n    })\r\n  } \r\n\r\n  render() {\r\n    return(\r\n      <Modal isOpen={this.props.isShow} toggle={this.sendData}>\r\n        <ModalBody>\r\n          <Form>\r\n            <FormGroup>\r\n              <Label style={{ color: '#000' }} for=\"username\">Username</Label>\r\n              <Input type=\"username\" name=\"profileUsername\" value={this.state.profileUsername} onChange={this.handleChange} disabled={this.state.editDisabled} />\r\n            </FormGroup>\r\n            <FormGroup>\r\n              <Label style={{ color: '#000' }} for=\"email\">Email</Label>\r\n              <Input type=\"email\" name=\"email\" value={this.state.profileEmail} disabled />\r\n            </FormGroup>\r\n            <FormGroup>\r\n              <Label style={{ color: '#000' }} for=\"discord\">Discord</Label>\r\n              <Input type=\"text\" name=\"profileDiscord\" value={this.state.profileDiscord} onChange={this.handleChange} disabled={this.state.editDisabled} />\r\n              <FormText color=\"muted\">\r\n                Example: chelk#4281\r\n              </FormText>\r\n            </FormGroup>\r\n            <Button className=\"btn-float-r btn-spacing\" color=\"secondary\" onClick={this.sendData}>Close</Button>\r\n            {this.state.editDisabled \r\n            ? <Button className=\"btn-float-r btn-spacing\" \r\n                      color=\"info\"\r\n                      onClick={this.setEditDisabled}>\r\n                      Edit\r\n                </Button>\r\n            : <Button className=\"btn-float-r btn-spacing\" \r\n                      color=\"success\"\r\n                      onClick={() => {this.setEditDisabled(); this.setUserProfile(); this.sendData()}}>\r\n                      Update\r\n              </Button>}\r\n          </Form>\r\n        </ModalBody>\r\n      </Modal>\r\n    )\r\n  }\r\n}\r\n\r\nexport default ProfileModal","import React from 'react'\r\nimport {\r\n  Modal,\r\n  ModalBody,\r\n  Form,\r\n  FormGroup,\r\n  Label,\r\n  Input,\r\n  InputGroup,\r\n  InputGroupAddon,\r\n  InputGroupText,\r\n  Button } from 'reactstrap'\r\n\r\nclass ManageGuildModal extends React.Component {\r\n  constructor(props) {\r\n    super(props)\r\n\r\n    this.sendData = this.sendData.bind(this)\r\n  }\r\n\r\n  sendData() {\r\n    this.props.callback(false)\r\n  }\r\n\r\n  render() {\r\n    return(\r\n      <Modal isOpen={this.props.isShow} toggle={this.sendData}>\r\n        <ModalBody>\r\n          <Form>\r\n            <FormGroup>\r\n              <Label style={{ color: '#000' }} for=\"guildName\">Guild Name</Label>\r\n              <Input className=\"info-font\" type=\"text\" name=\"guildName\" defaultValue={this.props.guildName} disabled />\r\n            </FormGroup>\r\n            <FormGroup>\r\n              <Label style={{ color: '#000' }} for=\" guild\">Guild Server</Label>\r\n              <InputGroup>\r\n                <InputGroupAddon addonType=\"prepend\">\r\n                  <InputGroupText className=\"info-font\" >{this.props.guildFaction}</InputGroupText>\r\n                  <InputGroupText className=\"info-font\" >{this.props.guildRegion}</InputGroupText>\r\n                </InputGroupAddon>\r\n                <Input className=\"info-font\" type=\"text\" name=\"guildName\" defaultValue={this.props.guildServer} disabled/>\r\n              </InputGroup>\r\n            </FormGroup>\r\n            <FormGroup>\r\n              <Label style={{ color: '#000' }} for=\"guildDesc\">Guild Description</Label>\r\n              <Input className=\"info-font\" type=\"textarea\" name=\"guildDesc\" defaultValue={this.props.guildDesc} disabled />\r\n            </FormGroup>\r\n            <Button className=\"btn-float-r btn-spacing\" color=\"secondary\" onClick={this.sendData}>Close</Button>\r\n          </Form>\r\n        </ModalBody>\r\n      </Modal>\r\n    )\r\n  }\r\n}\r\n\r\nexport default ManageGuildModal","import React from 'react'\r\nimport servers from './servers.json'\r\nimport Fire from './Fire'\r\nimport {\r\n  Modal,\r\n  ModalBody,\r\n  Form,\r\n  FormGroup,\r\n  Badge,\r\n  Input,\r\n  InputGroup,\r\n  InputGroupButtonDropdown,\r\n  DropdownToggle,\r\n  DropdownMenu,\r\n  DropdownItem,\r\n  FormText,\r\n  Button } from 'reactstrap'\r\n\r\nclass AddGuildModal extends React.Component {\r\n  constructor(props){\r\n    super(props)\r\n\r\n    this.closeModal = this.closeModal.bind(this)\r\n    this.ucFirst = this.ucFirst.bind(this)\r\n    this.toggleFactionSelect = this.toggleFactionSelect.bind(this)\r\n    this.toggleRegionSelect = this.toggleRegionSelect.bind(this)\r\n    this.toggleServerSelect = this.toggleServerSelect.bind(this)\r\n    this.setRegionEU = this.setRegionEU.bind(this)\r\n    this.setRegionUS = this.setRegionUS.bind(this)\r\n    this.setFactionA = this.setFactionA.bind(this)\r\n    this.setFactionH = this.setFactionH.bind(this)\r\n    this.getServers = this.getServers.bind(this)\r\n    this.handleChange = this.handleChange.bind(this)\r\n    this.checkGuildData = this.checkGuildData.bind(this)\r\n    this.addGuildToDB = this.addGuildToDB.bind(this)\r\n    this.getUser = this.getUser.bind(this)\r\n\r\n    this.state = {\r\n      profileUid: '',\r\n      profileUsername: '',\r\n      guildName: '',\r\n      guildNameError: '',\r\n      guildRegion: '',\r\n      guildRegionError: '',\r\n      guildServer: '',\r\n      guildServerError: '',\r\n      guildDesc: '',\r\n      guildDescError: '',\r\n      guildFaction: '',\r\n      guildFactionError: '',\r\n      factionColor: 'secondary',\r\n      regionSelect: false,\r\n      factionSelect: false,\r\n      serverSelect: false\r\n    }\r\n  }\r\n\r\n  componentWillMount() {\r\n    this.getUser()\r\n  }\r\n\r\n  handleChange(e) {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  }\r\n\r\n  ucFirst(s) {\r\n    if (typeof s !== 'string') return ''\r\n    return s.charAt(0).toUpperCase() + s.slice(1);\r\n  }\r\n\r\n  toggleFactionSelect() {\r\n    this.setState(prevState => ({\r\n      factionSelect: !prevState.factionSelect\r\n    }))\r\n  }\r\n\r\n  toggleRegionSelect() {\r\n    this.setState(prevState => ({\r\n     regionSelect: !prevState.regionSelect\r\n   }))\r\n  }\r\n\r\n  toggleServerSelect() {\r\n   this.setState(prevState => ({\r\n     serverSelect: !prevState.serverSelect\r\n   }))\r\n  }\r\n  \r\n  closeModal() {\r\n    this.props.callback(false)\r\n  }\r\n\r\n  setRegionEU() {\r\n    this.setState({ guildRegion: 'EU'})\r\n  }\r\n\r\n  setRegionUS() {\r\n    this.setState({ guildRegion: 'US' })\r\n  }\r\n\r\n  setFactionA() {\r\n    this.setState({ guildFaction: 'Alliance' })\r\n    this.setState({ factionColor: 'primary' })\r\n  }\r\n\r\n  setFactionH() {\r\n    this.setState({ guildFaction: 'Horde' })\r\n    this.setState({ factionColor: 'danger' })\r\n  }\r\n\r\n  getUser() {\r\n    Fire.auth().onAuthStateChanged(user => {\r\n      if(user) {\r\n        const userUid = Fire.auth().currentUser.uid\r\n        this.setState({ profileUid: userUid })\r\n      }\r\n      Fire.firestore().collection('users').doc(this.state.profileUid).get().then(doc => {\r\n        if(doc.exists) {\r\n          var data = JSON.stringify(doc.data())\r\n          var user = JSON.parse(data)\r\n          this.setState({ profileUsername: user.username })\r\n        }\r\n      })\r\n    })\r\n  }\r\n\r\n  getServers(e) {\r\n    var data = JSON.stringify(servers)\r\n    var serverList = JSON.parse(data)\r\n    var serverArray = []\r\n\r\n      // eslint-disable-next-line array-callback-return\r\n      serverList.map((lists) => {\r\n        serverArray.push(lists)\r\n      })\r\n    var clickedKey = e.target.id\r\n    var serverName = serverArray[clickedKey - 1]\r\n    this.setState({ guildServer: serverName.server })\r\n  }\r\n\r\n  checkGuildData() {\r\n    this.setState({\r\n      guildDescError: '',\r\n      guildNameError: '',\r\n      guildRegionError: '',\r\n      guildServerError: '',\r\n      guildFactionError: ''\r\n    })\r\n\r\n    if (!this.state.guildName) {\r\n      this.setState({ guildNameError: 'Guild Name is empty!'})\r\n    } else if(!this.state.guildFaction) {\r\n      this.setState({ guildFactionError: 'Faction isn\\'t selected!'})\r\n    } else if(!this.state.guildRegion) {\r\n      this.setState({ guildRegionError: 'Region isn\\'t selected!'})\r\n    } else if(!this.state.guildServer) {\r\n      this.setState({ guildServerError: 'Server isn\\'t selected!' })\r\n    } else if(!this.state.guildDesc) {\r\n      this.setState({ guildDescError: 'Description is blank!' })\r\n    } else if (this.state.guildName.length < 3 || this.state.guildName.length > 24) {\r\n      this.setState({ guildNameError: 'Error in Guild Name length!'})\r\n    } else if(this.state.guildDesc.length > 140) {\r\n      this.setState({ guildDescError: 'Description is too long!'})\r\n    } else if(this.state.guildDesc.length < 10) {\r\n      this.setState({ guildDescError: 'Description is too short!'})\r\n    } else {\r\n      this.addGuildToDB()\r\n    }\r\n  }\r\n\r\n  addGuildToDB() {\r\n    Fire.firestore().collection('guilds').doc(this.state.profileUid)\r\n    .set({\r\n      guildMaster: this.state.profileUsername,\r\n      guildName: this.state.guildName,\r\n      guildRegion: this.state.guildRegion + \"-\",\r\n      guildServer: this.ucFirst(this.state.guildServer),\r\n      guildDesc: this.ucFirst(this.state.guildDesc),\r\n      guildFaction: this.ucFirst(this.state.guildFaction),\r\n      applicants: []\r\n    }).then(() => {\r\n      console.log(\"Successfully written to Firestore\")\r\n      window.location.reload()\r\n    }).catch(err => {\r\n      console.log(\"Error writing to DB: \", err)\r\n    })\r\n  }\r\n\r\n  render() {\r\n    return(\r\n      <Modal isOpen={this.props.isModalShow} toggle={this.closeModal}>\r\n        <ModalBody>\r\n        <Form>\r\n          <FormGroup>\r\n            <Badge color=\"danger\" className=\"badge-spacing visible\">{this.state.guildNameError}</Badge>\r\n            <Input type=\"text\" name=\"guildName\" value={this.state.guildName} onChange={this.handleChange} placeholder=\"Guild Name\" />\r\n          </FormGroup>\r\n          <FormGroup>\r\n            <Badge color=\"danger\" className=\"badge-spacing visible\">{this.state.guildFactionError}{this.state.guildRegionError}{this.state.guildServerError}</Badge>\r\n            <InputGroup>\r\n              <InputGroupButtonDropdown addonType=\"append\" isOpen={this.state.factionSelect} toggle={this.toggleFactionSelect}>\r\n                <DropdownToggle color={this.state.factionColor}>\r\n                  {this.state.guildFaction ? this.state.guildFaction : \"Faction\"}\r\n                </DropdownToggle>\r\n                <DropdownMenu>\r\n                  <DropdownItem onClick={this.setFactionA}>Alliance</DropdownItem>\r\n                  <DropdownItem onClick={this.setFactionH}>Horde</DropdownItem>\r\n                </DropdownMenu>\r\n              </InputGroupButtonDropdown>\r\n              <InputGroupButtonDropdown addonType=\"append\" isOpen={this.state.regionSelect} toggle={this.toggleRegionSelect}>\r\n                <DropdownToggle>\r\n                  {this.state.guildRegion ? this.state.guildRegion : \"Region\"}\r\n                </DropdownToggle>\r\n                <DropdownMenu>\r\n                  <DropdownItem onClick={this.setRegionEU}>EU</DropdownItem>\r\n                  <DropdownItem onClick={this.setRegionUS}>US</DropdownItem>\r\n                </DropdownMenu>\r\n              </InputGroupButtonDropdown>\r\n              <InputGroupButtonDropdown addonType=\"append\" isOpen={this.state.serverSelect} toggle={this.toggleServerSelect}>\r\n                <DropdownToggle>\r\n                  {this.state.guildServer ? this.state.guildServer : \"Server\"}\r\n                </DropdownToggle>\r\n                <DropdownMenu>\r\n                  {servers.map((serverDetail) => {\r\n                    return <DropdownItem key={serverDetail.id} id={serverDetail.id} onClick={this.getServers}>{serverDetail.server}</DropdownItem>\r\n                  })}\r\n                </DropdownMenu>\r\n              </InputGroupButtonDropdown>\r\n            </InputGroup>\r\n          </FormGroup>\r\n          <FormGroup>\r\n            <Badge color=\"danger\" className=\"badge-spacing visible\">{this.state.guildDescError}</Badge>\r\n            <Input type=\"textarea\" name=\"guildDesc\" value={this.state.guildDesc} onChange={this.handleChange} placeholder=\"Description\" />\r\n            <FormText color={this.state.guildDesc.length > 140 ? \"danger\" : \"muted\"}>\r\n              Character count: {this.state.guildDesc.length} / 140\r\n            </FormText>\r\n          </FormGroup>\r\n          <Button className=\"btn-float-r btn-spacing\" color=\"secondary\" onClick={this.closeModal}>Close</Button>\r\n          <Button className=\"btn-float-r\" color=\"success\" onClick={this.checkGuildData}>Create</Button>\r\n        </Form>\r\n        </ModalBody>\r\n      </Modal>\r\n    )\r\n  }\r\n}\r\n\r\nexport default AddGuildModal","import React from 'react'\r\nimport Fire from './Fire'\r\nimport ProfileModal from './ProfileModal'\r\nimport ManageGuildModal from './ManageGuildModal'\r\nimport AddGuildModal from './AddGuildModal'\r\nimport {\r\n  Button,\r\n  DropdownToggle,\r\n  DropdownMenu,\r\n  DropdownItem,\r\n  Modal,\r\n  ModalBody,\r\n  ModalFooter,\r\n  NavLink,\r\n  NavItem,\r\n  UncontrolledDropdown\r\n} from 'reactstrap'\r\n\r\nclass LoggedIn extends React.Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.logout = this.logout.bind(this)\r\n    this.toggleProfile = this.toggleProfile.bind(this)\r\n    this.updateUsername = this.updateUsername.bind(this)\r\n    this.deleteUserProfile = this.deleteUserProfile.bind(this)\r\n    this.deleteUserGuild = this.deleteUserGuild.bind(this)\r\n    this.handleChange = this.handleChange.bind(this)\r\n    this.getUserEmail = this.getUserEmail.bind(this)\r\n    this.toggleAddGuild = this.toggleAddGuild.bind(this)\r\n    this.toggleManageGuild = this.toggleManageGuild.bind(this)\r\n    this.toggleDeleteProfileModal = this.toggleDeleteProfileModal.bind(this)\r\n    this.toggleDeleteGuildModal = this.toggleDeleteGuildModal.bind(this)\r\n    this.ucFirst = this.ucFirst.bind(this)\r\n    this.getGuildInfo = this.getGuildInfo.bind(this)\r\n    this.closeProfileModal = this.closeProfileModal.bind(this)\r\n    this.closeManageGuildModal = this.closeManageGuildModal.bind(this)\r\n    this.closeAddGuildModal = this.closeAddGuildModal.bind(this)\r\n\r\n    this.state = {\r\n      profileUid: '',\r\n      profileUsername: '',\r\n      profileModal: false,\r\n      addGuildModal: false,\r\n      manageGuildModal: false,\r\n      deleteGuildModal: false,\r\n      deleteProfileModal: false,\r\n      guildName: '',\r\n      guildRegion: '',\r\n      guildServer: '',\r\n      guildDesc: '',\r\n      guildFaction: '',\r\n      userHasGuild: false\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.getUserEmail()\r\n  }\r\n\r\n  logout() {\r\n    Fire.auth().signOut();\r\n  }\r\n\r\n  updateUsername(value) {\r\n    this.setState({ profileUsername: value })\r\n  }\r\n\r\n  handleChange(e) {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  }\r\n\r\n  ucFirst(s) {\r\n    if (typeof s !== 'string') return ''\r\n    return s.charAt(0).toUpperCase() + s.slice(1);\r\n  }\r\n\r\n  toggleProfile() {\r\n    this.setState(prevState => ({\r\n      profileModal: !prevState.profileModal\r\n    }))\r\n  }\r\n\r\n  toggleAddGuild() {\r\n    this.setState(prevState => ({\r\n      addGuildModal: !prevState.addGuildModal\r\n    }))\r\n  }\r\n\r\n  toggleManageGuild() {\r\n    this.setState(prevState => ({\r\n      manageGuildModal: !prevState.manageGuildModal\r\n    }))\r\n  }\r\n\r\n  toggleDeleteGuildModal() {\r\n    this.setState(prevState => ({\r\n      deleteGuildModal: !prevState.deleteGuildModal\r\n    }))\r\n  }\r\n\r\n  toggleDeleteProfileModal() {\r\n    this.setState(prevState => ({\r\n      deleteProfileModal: !prevState.deleteProfileModal\r\n    }))\r\n  }\r\n\r\n  closeProfileModal() {\r\n    this.setState({ profileModal: false })\r\n  }\r\n\r\n  closeManageGuildModal() {\r\n    this.setState({ manageGuildModal: false })\r\n  }\r\n\r\n  closeAddGuildModal() {\r\n    this.setState({ addGuildModal: false })\r\n  }\r\n\r\n  getUserEmail() {\r\n    Fire.auth().onAuthStateChanged( user => {\r\n      if(user) {\r\n        const userUid = Fire.auth().currentUser.uid\r\n        this.setState({ \r\n          profileEmail: user.email,\r\n          profileUid: userUid\r\n        })\r\n        Fire.firestore().collection('users').doc(this.state.profileUid).get().then(doc => {\r\n          if(doc.exists) {\r\n            var data = JSON.stringify(doc.data())\r\n            var user = JSON.parse(data)\r\n            this.setState({ profileUsername: user.username })\r\n          }\r\n        })\r\n        \r\n        Fire.firestore().collection('guilds').doc(this.state.profileUid).get().then(doc => {\r\n          if(doc.exists) {\r\n            this.setState({ userHasGuild: true })\r\n          } else (\r\n            console.log(\"No guild exists for this user!\")\r\n          )\r\n        })\r\n      } else if (!user) {\r\n        console.log(\"No user!\")\r\n      }\r\n    })\r\n  }\r\n\r\n  getGuildInfo() {\r\n    Fire.firestore().collection('guilds').doc(this.state.profileUid)\r\n      .get().then(doc => {\r\n        if(doc.exists) {\r\n          var data = JSON.stringify(doc.data())\r\n          var guild = JSON.parse(data)\r\n          this.setState({ \r\n            guildName: guild.guildName,\r\n            guildFaction: guild.guildFaction,\r\n            guildRegion: guild.guildRegion.slice(0, -1),\r\n            guildServer: guild.guildServer,\r\n            guildDesc: guild.guildDesc\r\n           })\r\n        } else { console.log(\"No such document!\") }\r\n      }).catch(err => {\r\n        console.log(\"Error getting info from DB: \", err)\r\n      })\r\n  }\r\n\r\n  deleteUserProfile() {\r\n    var canDelete = false\r\n    Fire.firestore().collection('users').doc(this.state.profileUid).delete()\r\n      .then(() => {\r\n        console.log(\"Document deleted successfully\")\r\n        canDelete = true;\r\n        if(canDelete) {\r\n          Fire.auth().currentUser.delete().then(() => {\r\n            console.log(\"User deleted successfully\")\r\n          }).catch(err => {\r\n            console.log(\"Error deleting user: \", err)\r\n          })\r\n        }\r\n      }).catch(err => {\r\n        console.log(\"Error deleting document: \", err)\r\n      })\r\n    }\r\n\r\n  deleteUserGuild() {\r\n    Fire.firestore().collection('guilds').doc(this.state.profileUid).delete()\r\n      .then(() => {\r\n        console.log(\"Document deleted successfully\")\r\n        window.location.reload()\r\n      }).catch(err => {\r\n        console.log(\"Error deleting document: \", err)\r\n      })\r\n  }\r\n\r\n  render() {\r\n    return ([\r\n      <NavItem>\r\n        <NavLink href=\"#\" onClick={this.toggleProfile}> {this.state.profileUsername ? this.state.profileUsername : \"Loading..\"} </NavLink>\r\n        <ProfileModal key=\"profileModal\" callback={this.closeProfileModal} isShow={this.state.profileModal} />\r\n      </NavItem>,\r\n      <UncontrolledDropdown nav inNavbar>\r\n        <DropdownToggle nav caret>\r\n          Options\r\n        </DropdownToggle>\r\n        <DropdownMenu right>\r\n          {this.state.userHasGuild \r\n          ? <DropdownItem onClick={() => {this.toggleManageGuild(); this.getGuildInfo()}}> Manage Guild </DropdownItem>\r\n          : <DropdownItem onClick={this.toggleAddGuild}>Create Guild</DropdownItem>}\r\n          <ManageGuildModal \r\n            key=\"manageGuildModal\" \r\n            callback={this.closeManageGuildModal} \r\n            isShow={this.state.manageGuildModal}\r\n            guildName={this.state.guildName}\r\n            guildDesc={this.state.guildDesc}\r\n            guildServer={this.state.guildServer}\r\n            guildFaction={this.state.guildFaction}\r\n            guildRegion={this.state.guildRegion} />\r\n\r\n          <AddGuildModal \r\n            key=\"addGuildModal\"\r\n            callback={this.closeAddGuildModal}\r\n            isModalShow={this.state.addGuildModal}\r\n            isRegionOpen={this.state.regionSelect}\r\n            isFactionOpen={this.state.factionSelect} />\r\n\r\n          {this.state.userHasGuild \r\n          ? [<DropdownItem> Show Applicants</DropdownItem>, \r\n              <DropdownItem onClick={this.toggleDeleteGuildModal}>Delete Guild</DropdownItem>,\r\n              <Modal isOpen={this.state.deleteGuildModal} toggle={this.toggleDeleteGuildModal}>\r\n                <ModalBody>\r\n                  <span className=\"delete-font\">\r\n                  Are you sure you want to permanently delete your guild? Doing so will delete the following:\r\n                    <ul className=\"no-dots\">\r\n                      <li> - Guild</li>\r\n                      <li> - Guild Applications</li>\r\n                    </ul>\r\n                  </span>\r\n                </ModalBody>\r\n                <ModalFooter>\r\n                  <Button color=\"success\" onClick={() => {this.deleteUserGuild(); this.toggleDeleteGuildModal()}}>Delete</Button>\r\n                  <Button color=\"danger\" onClick={this.toggleDeleteGuildModal}>Nevermind</Button>\r\n                </ModalFooter>\r\n              </Modal>]\r\n          : <DropdownItem> Show Applications</DropdownItem>}\r\n          <DropdownItem divider />\r\n          <DropdownItem onClick={this.toggleDeleteProfileModal}>\r\n            Delete Account\r\n          </DropdownItem>\r\n          <Modal isOpen={this.state.deleteProfileModal} toggle={this.toggleDeleteProfileModal}>\r\n            <ModalBody>\r\n              <span className=\"delete-font\">\r\n                Are you sure you want to permanently delete your account? Doing so will delete the following:\r\n                <ul className=\"no-dots\">\r\n                  <li> - Guild (If applicable)</li>\r\n                  <li> - Guild applications (If applicable)</li>\r\n                  <li> - Profile</li>\r\n                </ul>\r\n              </span>\r\n            </ModalBody>\r\n            <ModalFooter>\r\n              <Button color=\"success\" onClick={() => {this.deleteUserProfile(); this.toggleDeleteProfileModal()}}>Delete</Button>\r\n              <Button color=\"danger\" onClick={this.toggleDeleteProfileModal}>Nevermind</Button>\r\n            </ModalFooter>\r\n          </Modal>\r\n          <DropdownItem onClick={this.logout}>\r\n            Log Out\r\n          </DropdownItem>\r\n        </DropdownMenu>\r\n      </UncontrolledDropdown>]\r\n    )\r\n  }\r\n}\r\n\r\nexport default LoggedIn","import React from 'react'\r\nimport Fire from './Fire'\r\nimport {\r\n    Modal,\r\n    ModalBody,\r\n    Badge,\r\n    Button,\r\n    Input,\r\n    Form,\r\n    FormGroup,\r\n    FormText } from 'reactstrap'\r\n\r\nclass RegisterModal extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.checkPlayerData = this.checkPlayerData.bind(this)\r\n        this.sendData = this.sendData.bind(this)\r\n        this.handleChange = this.handleChange.bind(this)\r\n\r\n        this.state = {\r\n            isOpen: this.props.isShow,\r\n            username: '',\r\n            discord: '',\r\n            email: '',\r\n            password: '',\r\n            usernameError: '',\r\n            discordError: '',\r\n            emailError: '',\r\n            passwordError: ''\r\n        }\r\n    }\r\n\r\n    handleChange(e) {\r\n        this.setState({ [e.target.name]: e.target.value });\r\n    }\r\n\r\n    signup() {\r\n        Fire.auth().createUserWithEmailAndPassword(this.state.email, this.state.password)\r\n          .then(res => {\r\n            this.setState({ uid: res.user.uid })\r\n            Fire.firestore().collection('users').doc(this.state.uid).set({\r\n              username: this.state.username,\r\n              discord: this.state.discord,\r\n              email: this.state.email\r\n            }).then(() => {\r\n              console.log(\"Document successfully written\")\r\n            }).catch((error) => {\r\n              console.log(error);\r\n            })\r\n          })\r\n          .catch((err) => {\r\n            const errorCode = err.code;\r\n            switch(errorCode) {\r\n              case 'auth/weak-password':\r\n                this.setState({ passwordError: \"The password is too weak\" })    \r\n                break;    \r\n              // Other errors here...\r\n              default:\r\n                // Handle the scenario where an unexpected error occurs -- maybe a badge for \"unexpected error\" \r\n                // at the top of the modal?\r\n            }\r\n          })\r\n    }\r\n\r\n    checkPlayerData() {\r\n        this.setState({\r\n          usernameError: '',\r\n          discordError: '',\r\n          emailError: '',\r\n          passwordError: ''\r\n        })\r\n    \r\n        if(!this.state.email) {\r\n          this.setState({ emailError: \"Email field is empty!\" })\r\n        } else if(!this.state.password) {\r\n          this.setState({ passwordError: \"Password field is empty!\" })\r\n        } else if(!this.state.username) {\r\n          this.setState({ usernameError: \"Username field is empty!\" })\r\n        } else if(!this.state.discord) {\r\n          this.setState({ discordError: \"Discord field is empty!\" })\r\n        } else if(this.state.username.length > 14) {\r\n          this.setState({ usernameError: \"Username is too long!\" })\r\n        } else if(this.state.username.length < 3) {\r\n          this.setState({ usernameError: \"Username is too short!\" })\r\n        } else {\r\n          this.signup();\r\n        }\r\n    }\r\n\r\n    sendData() {\r\n        this.props.callback(false)\r\n    }\r\n\r\n    render() {\r\n        return (\r\n        <Modal isOpen={this.props.isShow} toggle={this.props.toggleRegisterModal}>\r\n          <ModalBody>\r\n            <Form>\r\n              <FormGroup>\r\n                <Badge color=\"danger\" className=\"badge-spacing\">{this.state.emailError}</Badge>\r\n                <Input type=\"email\" name=\"email\" value={this.state.email} onChange={this.handleChange} placeholder=\"Email\" />\r\n              </FormGroup>\r\n              <FormGroup>\r\n                <Badge color=\"danger\" className=\"badge-spacing\">{this.state.passwordError}</Badge>\r\n                <Input type=\"password\" name=\"password\" value={this.state.password} onChange={this.handleChange} placeholder=\"Password\" />\r\n              </FormGroup>\r\n              <FormGroup>\r\n                <Badge color=\"danger\" className=\"badge-spacing\">{this.state.usernameError}</Badge>\r\n                <Input type=\"username\" name=\"username\" value={this.state.username} onChange={this.handleChange} placeholder=\"Username\" />\r\n              </FormGroup>\r\n              <FormGroup>\r\n                <Badge color=\"danger\" className=\"badge-spacing\">{this.state.discordError}</Badge>\r\n                <Input type=\"text\" name=\"discord\" value={this.state.discord} onChange={this.handleChange} placeholder=\"Discord\" />\r\n                <FormText color=\"muted\">\r\n                  Example: chelk#4281\r\n                </FormText>\r\n              </FormGroup>\r\n            </Form>\r\n            <Button className=\"btn-float-r btn-spacing\" color=\"danger\" onClick={this.sendData}>Close</Button>\r\n            <Button className=\"btn-float-r\" color=\"success\" onClick={() => {\r\n              this.checkPlayerData();\r\n            }}> Register </Button>\r\n          </ModalBody>\r\n        </Modal>\r\n        )\r\n    }\r\n}\r\n\r\nexport default RegisterModal","import React from 'react'\r\nimport Fire from './Fire'\r\nimport {\r\n    Modal,\r\n    ModalBody,\r\n    Form,\r\n    FormGroup,\r\n    Input,\r\n    Button } from 'reactstrap'\r\n\r\nclass LoginModal extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.handleChange = this.handleChange.bind(this)\r\n        this.sendData = this.sendData.bind(this)\r\n        this.login = this.login.bind(this)\r\n\r\n        this.state = {\r\n            uid: '',\r\n            email: '',\r\n            password: ''\r\n        }\r\n    }\r\n\r\n    handleChange(e) {\r\n        this.setState({ [e.target.name]: e.target.value });\r\n    }\r\n\r\n    login() {\r\n        Fire.auth().signInWithEmailAndPassword(this.state.email, this.state.password)\r\n          .then((u) => {}).catch((error) => {\r\n            console.log(error);\r\n          })\r\n      }\r\n\r\n    sendData() {\r\n        this.props.callback(false)\r\n    }\r\n\r\n    render() {\r\n        return (\r\n        <Modal isOpen={this.props.isShow} toggle={this.sendData}>\r\n        <ModalBody>\r\n          <Form>\r\n            <FormGroup>\r\n              <Input type=\"email\" name=\"email\" value={this.state.email} onChange={this.handleChange} placeholder=\"Email\" />\r\n            </FormGroup>\r\n            <FormGroup>\r\n              <Input type=\"password\" name=\"password\" value={this.state.password} onChange={this.handleChange} placeholder=\"Password\" />\r\n            </FormGroup>\r\n          </Form>\r\n          <Button className=\"btn-float-r btn-spacing\" color=\"danger\" onClick={this.sendData}>Close</Button>\r\n          <Button className=\"btn-float-r\" color=\"success\" onClick={this.login}> Log in </Button>\r\n          <p className=\"error-message\" color=\"danger\">{this.props.error}</p>\r\n        </ModalBody>\r\n        </Modal>\r\n        )\r\n    }\r\n}\r\n\r\nexport default LoginModal","import React from 'react'\r\nimport RegisterModal from './RegisterModal'\r\nimport LoginModal from './LoginModal'\r\nimport {\r\n  NavItem,\r\n  NavLink } from 'reactstrap'\r\n\r\nclass LoggedOut extends React.Component {\r\n  constructor(props) {\r\n    super(props)\r\n\r\n    this.toggleLoginModal = this.toggleLoginModal.bind(this)\r\n    this.toggleRegisterModal = this.toggleRegisterModal.bind(this)\r\n    this.closeRegisterModal = this.closeRegisterModal.bind(this)\r\n    this.closeLoginModal = this.closeLoginModal.bind(this)\r\n\r\n    this.state = {\r\n      loginModal: false,\r\n      registerModal: false,\r\n      uid: ''\r\n    }\r\n  }\r\n\r\n  toggleLoginModal() {\r\n    this.setState(prevState => ({\r\n      loginModal: !prevState.loginModal\r\n    }))\r\n  }\r\n\r\n  toggleRegisterModal() {\r\n    this.setState(prevState => ({\r\n        registerModal: !prevState.registerModal\r\n      }))\r\n  }\r\n\r\n  closeRegisterModal(data) {\r\n    this.setState({ registerModal: data })\r\n  }\r\n\r\n  closeLoginModal(data) {\r\n    this.setState({ loginModal: data })\r\n  }\r\n\r\n  render() {\r\n    return([\r\n      <NavItem>\r\n        <NavLink href=\"#\" onClick={this.toggleRegisterModal}> Register </NavLink>\r\n        <RegisterModal key=\"registerModal\" callback={this.closeRegisterModal} isShow={this.state.registerModal}/>\r\n      </NavItem>,\r\n      <NavItem>\r\n        <NavLink href=\"#\" onClick={this.toggleLoginModal}> Login </NavLink>\r\n        <LoginModal key=\"loginModal\" callback={this.closeLoginModal} isShow={this.state.loginModal}/>\r\n      </NavItem>\r\n      ])\r\n  }\r\n}\r\n\r\nexport default LoggedOut","import React from 'react'\r\nimport Fire from './Fire'\r\nimport LoggedIn from './LoggedIn'\r\nimport LoggedOut from './LoggedOut'\r\nimport {\r\n  Collapse,\r\n  Navbar,\r\n  NavbarToggler,\r\n  Nav\r\n } from 'reactstrap';\r\n\r\nclass Directory extends React.Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.toggleNav = this.toggleNav.bind(this)\r\n    this.authListener = this.authListener.bind(this)\r\n    this.renderLoginOptions = this.renderLoginOptions.bind(this);\r\n    this.state = {\r\n      isOpen: false,\r\n      user: {}\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.authListener()\r\n  }\r\n\r\n  toggleNav() {\r\n    this.setState({\r\n      isOpen: !this.state.isOpen\r\n    })\r\n  }\r\n\r\n  authListener() {\r\n    Fire.auth().onAuthStateChanged((user) => {\r\n      if (user) {\r\n        this.setState({ user })\r\n      } else {\r\n        this.setState({ user: null })\r\n      }\r\n  })}\r\n\r\n  renderLoginOptions() {\r\n    // A user is logged in if the user object exists in the state \r\n    return this.state.user ? <LoggedIn /> : <LoggedOut />\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Navbar className=\"main-nav\" color=\"dark\" dark expand=\"md\" sticky=\"top\">\r\n        <NavbarToggler onClick={this.toggleNav} />\r\n        <Collapse isOpen={this.state.isOpen} navbar>\r\n          <Nav className=\"ml-auto\" navbar>\r\n          {this.renderLoginOptions()}\r\n          </Nav>\r\n        </Collapse>\r\n      </Navbar>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Directory\r\n","import React from 'react'\r\nimport GuildCard from './GuildCard'\r\nimport Directory from './Directory'\r\nimport Fire from './Fire'\r\nimport { CardDeck } from 'reactstrap'\r\nimport './App.css'\r\n\r\nclass App extends React.Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.getUserUID = this.getUserUID.bind(this)\r\n    this.guildInfo = this.guildInfo.bind(this)\r\n    this.renderCards = this.renderCards.bind(this)\r\n\r\n    this.state = {\r\n      profileUid: '',\r\n      guilds: []\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.guildInfo()\r\n    this.getUserUID()\r\n  }\r\n\r\n  getUserUID() {\r\n    Fire.auth().onAuthStateChanged( user => {\r\n      if(user) {\r\n        const userUid = Fire.auth().currentUser.uid\r\n        this.setState({ profileUid: userUid})  \r\n      }\r\n    })\r\n  }\r\n\r\n  guildInfo() {\r\n    Fire.firestore().collection('guilds')\r\n      .get().then(snapshot => {\r\n        let guilds = []\r\n          snapshot.forEach(doc => {\r\n            guilds.push({\r\n              id: doc.id,\r\n              guildDesc: doc.data().guildDesc,\r\n              guildFaction: doc.data().guildFaction,\r\n              guildName: doc.data().guildName,\r\n              guildRegion: doc.data().guildRegion,\r\n              guildServer: doc.data().guildServer,\r\n              guildMaster: doc.data().guildMaster\r\n            })\r\n          })\r\n          this.setState({guilds})\r\n        })\r\n  }\r\n\r\n  renderCards() {\r\n    var guildFaction\r\n    var gmGuildFaction\r\n    var guildComp = this.state.guilds.map(guild => {\r\n      if(guild.guildFaction === 'Alliance') {\r\n        guildFaction = 'guild-name -alliance'\r\n        gmGuildFaction = 'gm-link-text -alliance'\r\n      } else if (guild.guildFaction === 'Horde') {\r\n        guildFaction = 'guild-name -horde'\r\n        gmGuildFaction = 'gm-link-text -horde'\r\n      }\r\n      return <GuildCard key={guild.id} id={guild.id} guildMaster={guild.guildMaster} guildFaction={guildFaction} guildServer={guild.guildServer} guildName={guild.guildName} gmStyle={gmGuildFaction} guildRegion={guild.guildRegion} guildDesc={guild.guildDesc} />\r\n            })\r\n            return <CardDeck>{guildComp}</CardDeck>\r\n  }\r\n\r\n  render() {  \r\n    return(\r\n      <div className=\"main-div\">\r\n      <Directory />\r\n        {this.renderCards()}\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default App\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}