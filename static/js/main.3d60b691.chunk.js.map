{"version":3,"sources":["components/Guilds.js","components/Fire.js","components/LoggedIn.js","components/LoggedOut.js","components/Directory.js","components/App.js","serviceWorker.js","index.js"],"names":["Guilds","react_default","a","createElement","Col","sm","Card","body","inverse","className","style","backgroundColor","borderColor","CardBody","CardTitle","this","props","faction","guildname","CardSubtitle","server","CardText","desc","Button","React","Component","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","database","LoggedIn","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","logout","bind","assertThisInitialized","toggleProfile","updateUsername","startEdit","setUserProfile","handleChange","getUserInfo","getUserEmail","finishEdit","state","profileModal","editDisabled","profileUsername","profileEmail","profileDiscord","playerUid","Fire","auth","signOut","setState","value","e","defineProperty","target","name","prevState","_this2","onAuthStateChanged","user","userUid","currentUser","uid","email","_this3","firestore","collection","doc","get","then","exists","data","JSON","stringify","parse","username","discord","console","log","catch","err","set","_this4","NavItem","NavLink","href","onClick","Modal","isOpen","toggle","ModalBody","Form","FormGroup","Label","color","for","Input","type","onChange","disabled","FormText","UncontrolledDropdown","nav","inNavbar","DropdownToggle","caret","DropdownMenu","right","DropdownItem","divider","LoggedOut","login","signup","toggleLoginModal","toggleRegisterModal","loginModal","registerModal","password","signInWithEmailAndPassword","u","error","createUserWithEmailAndPassword","placeholder","Directory","toggleNav","authListener","Navbar","dark","expand","sticky","NavbarToggler","Collapse","navbar","Nav","components_LoggedIn","components_LoggedOut","App","alliance","horde","Row","components_Guilds","components_Directory","Boolean","window","location","hostname","match","ReactDOM","render","src_components_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.3d60b691.chunk.js","sourcesContent":["import React from 'react'\r\nimport {\r\n  Card,\r\n  CardText,\r\n  CardBody,\r\n  CardTitle,\r\n  CardSubtitle,\r\n  Button,\r\n  Col } from 'reactstrap'\r\n\r\nclass Guilds extends React.Component {\r\n  render() {\r\n    return (\r\n      <Col sm=\"4\">\r\n        <Card body inverse className=\"the-boxes\" style={{ backgroundColor: '#333', borderColor: '#FFF' }}>\r\n          <CardBody className=\"guild-box\">\r\n            <CardTitle className={this.props.faction}>{this.props.guildname}</CardTitle>\r\n            <CardSubtitle className=\"text-muted\">{this.props.server}</CardSubtitle>\r\n            <hr className=\"hr-divider\" />\r\n            <CardText>{this.props.desc}</CardText>\r\n            <Button>Contact</Button>\r\n          </CardBody>\r\n        </Card>\r\n      </Col>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Guilds\r\n","import firebase from 'firebase'\r\n\r\nconst config = {\r\n\tapiKey: \"AIzaSyCfRNMojIm31NBzNqvRpyrtgXBV4l3NpLM\",\r\n\tauthDomain: \"guild-recruit.firebaseapp.com\",\r\n\tdatabaseURL: \"https://guild-recruit.firebaseio.com\",\r\n\tprojectId: \"guild-recruit\",\r\n\tstorageBucket: \"guild-recruit.appspot.com\",\r\n\tmessagingSenderId: \"39854529631\",\r\n\tappId: \"1:39854529631:web:84a8510aaaa11a1f\"\r\n};\r\nfirebase.initializeApp(config);\r\nfirebase.database()\r\n\r\nexport default firebase","import React from 'react'\r\nimport Fire from './Fire'\r\nimport {\r\n  Button,\r\n  DropdownToggle,\r\n  DropdownMenu,\r\n  DropdownItem,\r\n  Form,\r\n  FormGroup,\r\n  FormText,\r\n  Input,\r\n  Label,\r\n  Modal,\r\n  ModalBody,\r\n  NavLink,\r\n  NavItem,\r\n  UncontrolledDropdown\r\n} from 'reactstrap';\r\n\r\nclass LoggedIn extends React.Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.logout = this.logout.bind(this)\r\n    this.toggleProfile = this.toggleProfile.bind(this)\r\n    this.updateUsername = this.updateUsername.bind(this)\r\n    this.startEdit = this.startEdit.bind(this)\r\n    this.setUserProfile = this.setUserProfile.bind(this)\r\n    this.handleChange = this.handleChange.bind(this)\r\n    this.getUserInfo = this.getUserInfo.bind(this)\r\n    this.getUserEmail = this.getUserEmail.bind(this)\r\n    this.finishEdit = this.finishEdit.bind(this)\r\n\r\n    this.state = {\r\n      profileModal: false,\r\n      editDisabled: true,\r\n      profileUsername: '',\r\n      profileEmail: '',\r\n      profileDiscord: '',\r\n      playerUid: ''\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.getUserEmail()\r\n  }\r\n\r\n  logout() {\r\n    Fire.auth().signOut();\r\n  }\r\n  \r\n  startEdit() {\r\n    this.setState({ editDisabled: false })\r\n  }\r\n\r\n  finishEdit() {\r\n    this.setState({ editDisabled: true })\r\n  }\r\n\r\n  updateUsername(value) {\r\n    this.setState({ profileUsername: value })\r\n  }\r\n\r\n  handleChange(e) {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  }\r\n\r\n  toggleProfile() {\r\n    this.setState(prevState => ({\r\n      profileModal: !prevState.profileModal\r\n    }))\r\n  }\r\n\r\n  getUserEmail() {\r\n    Fire.auth().onAuthStateChanged( user => {\r\n      if(user) {\r\n        const userUid = Fire.auth().currentUser.uid\r\n        this.setState({ profileEmail: user.email })\r\n        this.setState({ playerUid: userUid})\r\n      }\r\n    })\r\n\r\n  }\r\n\r\n  getUserInfo() {\r\n    const playerInfo = Fire.firestore().collection('users').doc(this.state.playerUid)\r\n    playerInfo.get().then(doc => {\r\n      if(doc.exists) {\r\n        var data = JSON.stringify(doc.data())\r\n        var user = JSON.parse(data)\r\n        this.setState({ profileUsername: user.username })\r\n        this.setState({ profileDiscord: user.discord })\r\n      } else {\r\n        console.log(\"No such document\")\r\n      }\r\n    }).catch((err) => {\r\n      console.log(\"Error getting document: \", err)\r\n    })\r\n  }\r\n\r\n  setUserProfile() {\r\n    Fire.firestore().collection('users').doc(this.state.playerUid).set({\r\n      username: this.state.profileUsername,\r\n      discord: this.state.profileDiscord,\r\n      email: this.state.profileEmail\r\n    }).then(() => {\r\n      console.log(\"Written to Firestore\")\r\n    }).catch(err => {\r\n      console.log(\"Error writing document: \", err)\r\n    })\r\n  }\r\n\r\n  render() {\r\n    return ([\r\n      <NavItem>\r\n        <NavLink href=\"#\" onClick={() => {this.toggleProfile(); this.getUserInfo()}}> My Profile </NavLink>\r\n        <Modal isOpen={this.state.profileModal} toggle={this.toggleProfile}>\r\n          <ModalBody>\r\n            <Form>\r\n              <FormGroup>\r\n                <Label style={{ color: '#000' }} for=\"username\">Username</Label>\r\n                <Input type=\"username\" name=\"profileUsername\" value={this.state.profileUsername} onChange={this.handleChange} disabled={this.state.editDisabled} />\r\n              </FormGroup>\r\n              <FormGroup>\r\n                <Label style={{ color: '#000' }} for=\"email\">Email</Label>\r\n                <Input type=\"email\" name=\"email\" value={this.state.profileEmail} disabled />\r\n              </FormGroup>\r\n              <FormGroup>\r\n                <Label style={{ color: '#000' }} for=\"discord\">Discord</Label>\r\n                <Input type=\"text\" name=\"profileDiscord\" value={this.state.profileDiscord} onChange={this.handleChange} disabled={this.state.editDisabled} />\r\n                <FormText color=\"muted\">\r\n                  Example: chelk#4281\r\n                </FormText>\r\n              </FormGroup>\r\n              <Button className=\"btn-float-r btn-spacing\" color=\"secondary\" onClick={this.toggleProfile}>Close</Button>\r\n              <Button className=\"btn-float-r btn-spacing\" color=\"info\" onClick={this.startEdit}>Edit</Button>\r\n              <Button className=\"btn-float-r\" color=\"success\" onClick={() => {this.toggleProfile(); this.setUserProfile(); this.finishEdit();}}>Update</Button>\r\n            </Form>\r\n          </ModalBody>\r\n        </Modal>\r\n      </NavItem>,\r\n      <UncontrolledDropdown nav inNavbar>\r\n        <DropdownToggle nav caret>\r\n          Options\r\n        </DropdownToggle>\r\n        <DropdownMenu right>\r\n          <DropdownItem> Add(/edit?) Guild</DropdownItem>\r\n          <DropdownItem> Show Guilds Applied To?</DropdownItem>\r\n          <DropdownItem divider />\r\n          <DropdownItem onClick={this.logout}>\r\n            Log Out\r\n          </DropdownItem>\r\n        </DropdownMenu>\r\n      </UncontrolledDropdown>]\r\n    )\r\n  }\r\n}\r\n\r\nexport default LoggedIn","import React from 'react'\r\nimport Fire from './Fire'\r\nimport {\r\n  NavItem,\r\n  NavLink,\r\n  Button,\r\n  Modal,\r\n  ModalBody,\r\n  Input,\r\n  FormGroup,\r\n  FormText,\r\n  Form } from 'reactstrap';\r\n\r\n\r\nclass LoggedOut extends React.Component {\r\n  constructor(props) {\r\n    super(props)\r\n\r\n    this.login = this.login.bind(this)\r\n    this.signup = this.signup.bind(this)\r\n    this.handleChange = this.handleChange.bind(this)\r\n    this.toggleLoginModal = this.toggleLoginModal.bind(this)\r\n    this.toggleRegisterModal = this.toggleRegisterModal.bind(this)\r\n\r\n    this.state = {\r\n      loginModal: false,\r\n      registerModal: false,\r\n      username: '',\r\n      discord: '',\r\n      email: '',\r\n      password: '',\r\n      uid: ''\r\n    }\r\n  }\r\n\r\n  login(e) {\r\n    Fire.auth().signInWithEmailAndPassword(this.state.email, this.state.password)\r\n      .then((u) => {}).catch((error) => {\r\n        console.log(error);\r\n      })\r\n  }\r\n\r\n  signup(e) {\r\n    Fire.auth().createUserWithEmailAndPassword(this.state.email, this.state.password)\r\n      .then(() => {\r\n        const userUid = Fire.auth().currentUser.uid\r\n        this.setState({ uid: userUid })\r\n        Fire.firestore().collection('users').doc(this.state.uid).set({\r\n          username: this.state.username,\r\n          discord: this.state.discord,\r\n          email: this.state.email\r\n        }).then(() => {\r\n          console.log(\"Document successfully written\")\r\n        }).catch((error) => {\r\n          console.log(error);\r\n        })\r\n      })\r\n  }\r\n\r\n  handleChange(e) {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  }\r\n\r\n  toggleLoginModal() {\r\n    this.setState(prevState => ({\r\n      loginModal: !prevState.loginModal\r\n    }))\r\n  }\r\n\r\n  toggleRegisterModal() {\r\n    this.setState(prevState => ({\r\n      registerModal: !prevState.registerModal\r\n    }))\r\n  }\r\n\r\n  render() {\r\n    return([\r\n      <NavItem>\r\n        <NavLink href=\"#\" onClick={this.toggleRegisterModal}> Register </NavLink>\r\n        <Modal isOpen={this.state.registerModal} toggle={this.toggleRegisterModal}>\r\n          <ModalBody>\r\n            <Form>\r\n              <FormGroup>\r\n                <Input type=\"email\" name=\"email\" value={this.state.email} onChange={this.handleChange} placeholder=\"Email\" />\r\n              </FormGroup>\r\n              <FormGroup>\r\n                <Input type=\"password\" name=\"password\" value={this.state.password} onChange={this.handleChange} placeholder=\"Password\" />\r\n              </FormGroup>\r\n              <FormGroup>\r\n                <Input type=\"username\" name=\"username\" value={this.state.username} onChange={this.handleChange} placeholder=\"Username\" />\r\n              </FormGroup>\r\n              <FormGroup>\r\n                <Input type=\"text\" name=\"discord\" value={this.state.discord} onChange={this.handleChange} placeholder=\"Discord\" />\r\n                <FormText color=\"muted\">\r\n                  Example: chelk#4281\r\n                </FormText>\r\n              </FormGroup>\r\n            </Form>\r\n            <Button className=\"btn-float-r\" color=\"secondary\" onClick={() => {\r\n              this.signup();\r\n              this.toggleRegisterModal();\r\n            }}> Register </Button>\r\n          </ModalBody>\r\n        </Modal>\r\n      </NavItem>,\r\n      <NavItem>\r\n        <NavLink href=\"#\" onClick={this.toggleLoginModal}> Login </NavLink>\r\n        <Modal isOpen={this.state.loginModal} toggle={this.toggleLoginModal}>\r\n        <ModalBody>\r\n          <Form>\r\n            <FormGroup>\r\n              <Input type=\"email\" name=\"email\" value={this.state.email} onChange={this.handleChange} placeholder=\"Email\" />\r\n            </FormGroup>\r\n            <FormGroup>\r\n              <Input type=\"password\" name=\"password\" value={this.state.password} onChange={this.handleChange} placeholder=\"Password\" />\r\n            </FormGroup>\r\n          </Form>\r\n          <Button className=\"btn-float-r\" color=\"secondary\" onClick={() => {\r\n              this.login();\r\n              this.toggleRegisterModal();\r\n            }}> Log in </Button>\r\n          <p className=\"error-message\" color=\"danger\">{this.props.error}</p>\r\n        </ModalBody>\r\n        </Modal>\r\n      </NavItem>\r\n      ]\r\n    )\r\n  }\r\n}\r\n\r\nexport default LoggedOut","import React from 'react'\r\nimport Fire from './Fire'\r\nimport LoggedIn from './LoggedIn'\r\nimport LoggedOut from './LoggedOut'\r\nimport {\r\n  Collapse,\r\n  Navbar,\r\n  NavbarToggler,\r\n  Nav\r\n } from 'reactstrap';\r\n\r\nclass Directory extends React.Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.toggleNav = this.toggleNav.bind(this)\r\n    this.authListener = this.authListener.bind(this)\r\n    this.state = {\r\n      isOpen: false,\r\n      user: {}\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.authListener()\r\n  }\r\n\r\n  toggleNav() {\r\n    this.setState({\r\n      isOpen: !this.state.isOpen\r\n    })\r\n  }\r\n\r\n  authListener() {\r\n    Fire.auth().onAuthStateChanged((user) => {\r\n      if (user) {\r\n        this.setState({ user })\r\n      } else {\r\n        this.setState({ user: null })\r\n      }\r\n  })}\r\n\r\n  render() {\r\n    return (\r\n      <Navbar className=\"main-nav\" color=\"dark\" dark expand=\"md\" sticky=\"top\">\r\n        <NavbarToggler onClick={this.toggleNav} />\r\n        <Collapse isOpen={this.state.isOpen} navbar>\r\n          <Nav className=\"ml-auto\" navbar>\r\n          {this.state.user\r\n        ?  <LoggedIn />\r\n        :  <LoggedOut />}\r\n          </Nav>\r\n        </Collapse>\r\n      </Navbar>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Directory\r\n","import React from 'react'\nimport Guilds from './Guilds'\nimport Directory from './Directory'\nimport { Row } from 'reactstrap'\nimport './App.css'\n\nclass App extends React.Component {\n  render() {\n\n    const alliance = 'guild-name -alliance'\n    const horde = 'guild-name -horde'\n\n    return(\n      <div className=\"main-div\">\n        <Row>\n          <Guilds guildname=\"HelloQ\" faction={alliance} server=\"US-Sargeras\" desc=\"This is some sample text about our guild that we are advertising for our raiding team. Please contact us to join us\" />\n          <Guilds guildname=\"World\" faction={alliance} server=\"US-Sargeras\" desc=\"This is some sample text about our guild that we are advertising for our raiding team. Please contact us to join us\" />\n          <Guilds guildname=\"Method\" faction={horde} server=\"EU-Tauren Mill\" desc=\"This is some sample text about our guild that we are advertising for our raiding team. Please contact us to join us\" />\n        </Row>\n        <Directory />\n        <Row>\n          <Guilds guildname=\"HelloP\" faction={alliance} server=\"US-Sargeras\" desc=\"This is some sample text about our guild that we are advertising for our raiding team. Please contact us to join us\" />\n          <Guilds guildname=\"WorldD\" faction={alliance} server=\"US-Sargeras\" desc=\"This is some sample text about our guild that we are advertising for our raiding team. Please contact us to join us\" />\n          <Guilds guildname=\"Method B\" faction={horde} server=\"EU-Tauren Mill\" desc=\"This is some sample text about our guild that we are advertising for our raiding team. Please contact us to join us\" />\n        </Row>\n        <Row>\n          <Guilds guildname=\"HelloP\" faction={alliance} server=\"US-Sargeras\" desc=\"This is some sample text about our guild that we are advertising for our raiding team. Please contact us to join us\" />\n          <Guilds guildname=\"WorldD\" faction={alliance} server=\"US-Sargeras\" desc=\"This is some sample text about our guild that we are advertising for our raiding team. Please contact us to join us\" />\n          <Guilds guildname=\"Method B\" faction={horde} server=\"EU-Tauren Mill\" desc=\"This is some sample text about our guild that we are advertising for our raiding team. Please contact us to join us\" />\n        </Row>\n        <Row>\n          <Guilds guildname=\"HelloP\" faction={alliance} server=\"US-Sargeras\" desc=\"This is some sample text about our guild that we are advertising for our raiding team. Please contact us to join us\" />\n          <Guilds guildname=\"WorldD\" faction={alliance} server=\"US-Sargeras\" desc=\"This is some sample text about our guild that we are advertising for our raiding team. Please contact us to join us\" />\n          <Guilds guildname=\"Method B\" faction={horde} server=\"EU-Tauren Mill\" desc=\"This is some sample text about our guild that we are advertising for our raiding team. Please contact us to join us\" />\n        </Row>\n        <Row>\n          <Guilds guildname=\"HelloP\" faction={alliance} server=\"US-Sargeras\" desc=\"This is some sample text about our guild that we are advertising for our raiding team. Please contact us to join us\" />\n          <Guilds guildname=\"WorldD\" faction={alliance} server=\"US-Sargeras\" desc=\"This is some sample text about our guild that we are advertising for our raiding team. Please contact us to join us\" />\n          <Guilds guildname=\"Method B\" faction={horde} server=\"EU-Tauren Mill\" desc=\"This is some sample text about our guild that we are advertising for our raiding team. Please contact us to join us\" />\n        </Row>\n        <Row>\n          <Guilds guildname=\"HelloP\" faction={alliance} server=\"US-Sargeras\" desc=\"This is some sample text about our guild that we are advertising for our raiding team. Please contact us to join us\" />\n          <Guilds guildname=\"WorldD\" faction={alliance} server=\"US-Sargeras\" desc=\"This is some sample text about our guild that we are advertising for our raiding team. Please contact us to join us\" />\n          <Guilds guildname=\"Method B\" faction={horde} server=\"EU-Tauren Mill\" desc=\"This is some sample text about our guild that we are advertising for our raiding team. Please contact us to join us\" />\n        </Row>\n    </div>\n    )\n  }\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}